
PLAY [all] *********************************************************************

TASK [Set facts when not using docker container runtime (default)] *************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [Set facts when using Docker container runtime] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

PLAY [all] *********************************************************************

TASK [install python (no proxy)] ***********************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [install python (using proxy)] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

PLAY [all] *********************************************************************

TASK [force an apt update on Ubuntu] *******************************************
changed: [mgmt1]
changed: [dgx4]
changed: [dgx2]
changed: [dgx3]
changed: [dgx1]

TASK [install python 3 libraries if python 3 is present] ***********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [install epel on EL7] *****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [install python 2 libraries on EL7] ***************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

PLAY [all] *********************************************************************

TASK [make sure kubespray is at the correct version] ***************************
changed: [mgmt1 -> localhost]

PLAY [all] *********************************************************************

TASK [set SSH key location] ****************************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [Create SSH directory if it doesn't exist] ********************************
ok: [mgmt1 -> 127.0.0.1]

TASK [Generate default SSH keypair if it doesn't exist] ************************
ok: [mgmt1 -> 127.0.0.1]

TASK [run setup to get ansible user] *******************************************
ok: [dgx2]
ok: [dgx1]
ok: [mgmt1]
ok: [dgx3]
ok: [dgx4]

TASK [Add SSH public key to ansible user authorized keys] **********************
ok: [dgx1]
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [debug] *******************************************************************
ok: [mgmt1 -> 127.0.0.1] => 
  msg: Now, you shouldn't need to use -k/--ask-pass for these hosts anymore.

PLAY [all] *********************************************************************

TASK [run setup to get ansible user] *******************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [check for presence of sudo] **********************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [use method "sudo" (requires password for "aioadmin")] ********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [use method "su" (requires password for "root")] **************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [install sudo package] ****************************************************
ok: [mgmt1]
ok: [dgx2]
ok: [dgx1]
ok: [dgx3]
ok: [dgx4]

TASK [grant password-less sudo to user "aioadmin"] *****************************
ok: [dgx1]
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [debug] *******************************************************************
ok: [mgmt1 -> 127.0.0.1] => 
  msg: Now, you shouldn't need to use -K/--ask-become-pass for these hosts anymore.

PLAY [all] *********************************************************************

TASK [check if /etc/cloud is present] ******************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [disable generator for setting cloud-init target] *************************
changed: [mgmt1]
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

TASK [disable all systemd services] ********************************************
ok: [dgx1] => (item=cloud-init)
ok: [dgx2] => (item=cloud-init)
ok: [mgmt1] => (item=cloud-init)
ok: [dgx3] => (item=cloud-init)
ok: [dgx4] => (item=cloud-init)
ok: [dgx1] => (item=cloud-config)
ok: [dgx2] => (item=cloud-config)
ok: [mgmt1] => (item=cloud-config)
ok: [dgx3] => (item=cloud-config)
ok: [dgx4] => (item=cloud-config)
ok: [dgx1] => (item=cloud-final)
ok: [dgx2] => (item=cloud-final)
ok: [dgx3] => (item=cloud-final)
ok: [mgmt1] => (item=cloud-final)
ok: [dgx4] => (item=cloud-final)

PLAY [all] *********************************************************************

TASK [Configure Chrony client] *************************************************

TASK [DeepOps.chrony : Add the OS specific variables] **************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [DeepOps.chrony : Installation] *******************************************
included: /home/aioadmin/deepops/roles/galaxy/DeepOps.chrony/tasks/debian.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [DeepOps.chrony : Install the require packages in Debian derivatives] *****
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [DeepOps.chrony : Copy the chrony.conf template file] *********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [DeepOps.chrony : Start and enable chrony service] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [DeepOps.chrony : Ensure tzdata package is installed] *********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [DeepOps.chrony : Set timezone] *******************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

PLAY [kube-master] *************************************************************

TASK [Install required Python OpenShift packages/libraries] ********************

TASK [openshift : install virtualenv and setuptools] ***************************
ok: [mgmt1] => (item=virtualenv)
ok: [mgmt1] => (item=python3-setuptools)

TASK [openshift : create location for deepops files] ***************************
ok: [mgmt1]

TASK [openshift : install openshift python client for k8s_raw module] **********
ok: [mgmt1]

TASK [openshift : trust GPG key for EPEL] **************************************
skipping: [mgmt1]

TASK [openshift : install EPEL for CentOS] *************************************
skipping: [mgmt1]

TASK [openshift : install openshift python client for k8s_raw module] **********
skipping: [mgmt1]

TASK [openshift : install openshift python client for k8s_raw module] **********
skipping: [mgmt1]

PLAY [all] *********************************************************************

TASK [set /etc/hostname] *******************************************************
ok: [mgmt1]
ok: [dgx3]
ok: [dgx2]
ok: [dgx4]
ok: [dgx1]

TASK [set /etc/hosts] **********************************************************

TASK [DeepOps.hosts : Gather facts again] **************************************
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]
ok: [dgx1]

TASK [DeepOps.hosts : register hosts list if ansible group limit is specified] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [DeepOps.hosts : Install user-defined custom hosts file] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [DeepOps.hosts : Install custom hosts file] *******************************
changed: [dgx1]
changed: [dgx2]
changed: [mgmt1]
changed: [dgx3]
changed: [dgx4]

TASK [DeepOps.hosts : render custom hosts template] ****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [DeepOps.hosts : Add Managed Block to /etc/hosts] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

PLAY [kube-master] *************************************************************

TASK [Force binaries directory for Flatcar Container Linux by Kinvolk] *********
skipping: [mgmt1]

TASK [Set os_family fact for other redhat-based operating systems] *************
skipping: [mgmt1]

TASK [Set os_family fact for other debian-based operating systems] *************
skipping: [mgmt1]

TASK [check if booted with ostree] *********************************************
skipping: [mgmt1]

TASK [set is_fedora_coreos] ****************************************************
skipping: [mgmt1]

TASK [set is_fedora_coreos] ****************************************************
skipping: [mgmt1]

TASK [check resolvconf] ********************************************************
skipping: [mgmt1]

TASK [check existence of /etc/resolvconf/resolv.conf.d] ************************
skipping: [mgmt1]

TASK [check status of /etc/resolv.conf] ****************************************
skipping: [mgmt1]

TASK [get content of /etc/resolv.conf] *****************************************
skipping: [mgmt1]

TASK [get currently configured nameservers] ************************************
skipping: [mgmt1]

TASK [Stop if /etc/resolv.conf not configured nameservers] *********************
skipping: [mgmt1]

TASK [NetworkManager | Check if host has NetworkManager] ***********************
skipping: [mgmt1]

TASK [check systemd-resolved] **************************************************
skipping: [mgmt1]

TASK [set default dns if remove_default_searchdomains is false] ****************
skipping: [mgmt1]

TASK [set dns facts] ***********************************************************
skipping: [mgmt1]

TASK [check if kubelet is configured] ******************************************
skipping: [mgmt1]

TASK [check if early DNS configuration stage] **********************************
skipping: [mgmt1]

TASK [target resolv.conf files] ************************************************
skipping: [mgmt1]

TASK [target temporary resolvconf cloud init file (Flatcar Container Linux by Kinvolk / Fedora CoreOS)] ***
skipping: [mgmt1]

TASK [check if /etc/dhclient.conf exists] **************************************
skipping: [mgmt1]

TASK [target dhclient conf file for /etc/dhclient.conf] ************************
skipping: [mgmt1]

TASK [check if /etc/dhcp/dhclient.conf exists] *********************************
skipping: [mgmt1]

TASK [target dhclient conf file for /etc/dhcp/dhclient.conf] *******************
skipping: [mgmt1]

TASK [target dhclient hook file for Red Hat family] ****************************
skipping: [mgmt1]

TASK [target dhclient hook file for Debian family] *****************************
skipping: [mgmt1]

TASK [generate search domains to resolvconf] ***********************************
skipping: [mgmt1]

TASK [pick coredns cluster IP or default resolver] *****************************
skipping: [mgmt1]

TASK [generate nameservers for resolvconf, including cluster DNS] **************
skipping: [mgmt1]

TASK [generate nameservers for resolvconf, not including cluster DNS] **********
skipping: [mgmt1]

TASK [gather os specific variables] ********************************************
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/preinstall/tasks/../vars/ubuntu.yml) 

TASK [set etcd vars if using kubeadm mode] *************************************
skipping: [mgmt1]

TASK [check /usr readonly] *****************************************************
skipping: [mgmt1]

TASK [set alternate flexvolume path] *******************************************
skipping: [mgmt1]

TASK [remove docker overrides, specifically to deal with conflicting options from DGX OS] ***
skipping: [mgmt1]

PLAY [kube-master] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
skipping: [mgmt1]

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
skipping: [mgmt1]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
skipping: [mgmt1]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***
skipping: [mgmt1] => (item=git) 
skipping: [mgmt1] => (item=make) 

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ***
skipping: [mgmt1]

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
skipping: [mgmt1]

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] ***
skipping: [mgmt1]

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] ***
skipping: [mgmt1]

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : check if fedora coreos] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : set is_ostree] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : set docker_version for openEuler] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : gather os specific variables] ***
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [../../submodules/kubespray/roles/container-engine/docker : Warn about Docker version on SUSE] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : include_tasks] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Remove legacy docker repo file] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Ensure old versions of Docker are not installed. | Debian] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Ensure podman not installed. | RedHat] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Ensure old versions of Docker are not installed. | RedHat] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : ensure docker-ce repository public key is installed] ***
skipping: [mgmt1] => (item=) 

TASK [../../submodules/kubespray/roles/container-engine/docker : ensure docker-ce repository is enabled] ***
skipping: [mgmt1] => (item=) 

TASK [../../submodules/kubespray/roles/container-engine/docker : Configure docker repository on Fedora] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Configure docker repository on RedHat/CentOS/OracleLinux/AlmaLinux/KylinLinux] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Remove dpkg hold] ***
skipping: [mgmt1] => (item=containerd.io) 
skipping: [mgmt1] => (item=docker-ce) 
skipping: [mgmt1] => (item=docker-ce-cli) 

TASK [../../submodules/kubespray/roles/container-engine/docker : ensure docker packages are installed] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Tell Debian hosts not to change the docker version with apt upgrade] ***
skipping: [mgmt1] => (item=containerd.io) 
skipping: [mgmt1] => (item=docker-ce) 
skipping: [mgmt1] => (item=docker-ce-cli) 

TASK [../../submodules/kubespray/roles/container-engine/docker : ensure service is started if docker packages are already present] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : flush handlers so we can wait for docker to come up] ***

TASK [../../submodules/kubespray/roles/container-engine/docker : include_tasks] ***

TASK [../../submodules/kubespray/roles/container-engine/docker : Create docker service systemd directory if it doesn't exist] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Write docker proxy drop-in] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : get systemd version] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Write docker.service systemd file] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Write docker options systemd drop-in] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Write docker dns systemd drop-in] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Copy docker orphan clean up script to the node] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Write docker orphan clean up systemd drop-in] ***
skipping: [mgmt1]

TASK [../../submodules/kubespray/roles/container-engine/docker : Flush handlers] ***

TASK [../../submodules/kubespray/roles/container-engine/docker : ensure docker service is started and enabled] ***
skipping: [mgmt1] => (item=docker) 

PLAY [kube-master] *************************************************************

TASK [standalone-container-registry : create local directory for configuration] ***
skipping: [mgmt1]

TASK [standalone-container-registry : add config file] *************************
skipping: [mgmt1]

TASK [standalone-container-registry : trust GPG key for EPEL] ******************
skipping: [mgmt1]

TASK [standalone-container-registry : Enable EPEL repo] ************************
skipping: [mgmt1]

TASK [standalone-container-registry : install python-docker] *******************
skipping: [mgmt1]

TASK [standalone-container-registry : install pip] *****************************
skipping: [mgmt1]

TASK [standalone-container-registry : install docker] **************************
skipping: [mgmt1]

TASK [standalone-container-registry : run registry docker container] ***********
skipping: [mgmt1]

PLAY [all] *********************************************************************

TASK [install epel] ************************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [install sshpass] *********************************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

PLAY [all] *********************************************************************

TASK [un-hold container runtime packages on Ubuntu] ****************************
ok: [dgx1] => (item=docker-ce)
ok: [dgx2] => (item=docker-ce)
changed: [mgmt1] => (item=docker-ce)
ok: [dgx3] => (item=docker-ce)
ok: [dgx4] => (item=docker-ce)
changed: [dgx2] => (item=docker-ce-cli)
changed: [dgx1] => (item=docker-ce-cli)
changed: [mgmt1] => (item=docker-ce-cli)
changed: [dgx3] => (item=docker-ce-cli)
changed: [dgx4] => (item=docker-ce-cli)
changed: [dgx1] => (item=docker-ce-rootless-extras)
changed: [dgx2] => (item=docker-ce-rootless-extras)
changed: [dgx3] => (item=docker-ce-rootless-extras)
changed: [mgmt1] => (item=docker-ce-rootless-extras)
changed: [dgx4] => (item=docker-ce-rootless-extras)
ok: [dgx1] => (item=containerd.io)
ok: [dgx2] => (item=containerd.io)
ok: [dgx3] => (item=containerd.io)
changed: [mgmt1] => (item=containerd.io)
ok: [dgx4] => (item=containerd.io)

PLAY [localhost] ***************************************************************
skipping: no hosts matched

PLAY [Add kube-master nodes to kube_control_plane] *****************************

TASK [add nodes to kube_control_plane group] ***********************************
changed: [mgmt1]

PLAY [Add kube-node nodes to kube_node] ****************************************

TASK [add nodes to kube_node group] ********************************************
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

PLAY [Add k8s-cluster nodes to k8s_cluster] ************************************

TASK [add nodes to k8s_cluster group] ******************************************
changed: [mgmt1]
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

PLAY [Add calico-rr nodes to calico_rr] ****************************************
skipping: no hosts matched

PLAY [Add no-floating nodes to no_floating] ************************************
skipping: no hosts matched

PLAY [bastion[0]] **************************************************************
skipping: no hosts matched

PLAY [k8s_cluster:etcd:calico_rr] **********************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx3] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx2] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx3] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx4] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Fetch /etc/os-release] ************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [bootstrap-os : Check if bootstrap is needed] *****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : Check http::proxy in apt configuration files] *************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : Add http_proxy to /etc/apt/apt.conf if http_proxy is defined] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Check https::proxy in apt configuration files] ************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : Add https_proxy to /etc/apt/apt.conf if https_proxy is defined] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Install python3] ******************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Update Apt cache] *****************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Set the ansible_python_interpreter fact] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : Install dbus for the hostname module] *********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Create remote_tmp for it is used by another module] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : Gather host facts to get ansible_os_family] ***************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx4]
ok: [dgx3]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (CoreOS, Flatcar, Suse, ClearLinux and Fedora only)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Update hostname fact (CoreOS, Flatcar, Suse, ClearLinux and Fedora only)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Install ceph-commmon package] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [bootstrap-os : Ensure bash_completion.d folder exists] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

PLAY [Gather facts] ************************************************************

TASK [Gather minimal facts] ****************************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [Gather necessary facts (network)] ****************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [Gather necessary facts (hardware)] ***************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

PLAY [k8s_cluster:etcd] ********************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx2] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx4] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx2] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx3] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx4] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
ok: [mgmt1 -> localhost]

TASK [kubespray-defaults : set fallback_ips] ***********************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [adduser : User | Create User Group] **************************************
ok: [dgx1]
ok: [dgx2]
ok: [mgmt1]
ok: [dgx3]
ok: [dgx4]

TASK [adduser : User | Create User] ********************************************
ok: [dgx1]
ok: [dgx2]
ok: [mgmt1]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [dgx1] => (item=swap)
ok: [mgmt1] => (item=swap)
ok: [dgx2] => (item=swap)
ok: [dgx3] => (item=swap)
ok: [mgmt1] => (item=none)
ok: [dgx1] => (item=none)
ok: [dgx4] => (item=swap)
ok: [dgx3] => (item=none)
ok: [dgx4] => (item=none)
ok: [dgx2] => (item=none)

TASK [kubernetes/preinstall : check swap] **************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Disable swap] ************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Disable swapOnZram for Fedora] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Force binaries directory for Flatcar Container Linux by Kinvolk] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Set os_family fact for other redhat-based operating systems] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Set os_family fact for other debian-based operating systems] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : check if booted with ostree] *********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : check resolvconf] ********************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx4]
ok: [dgx3]

TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *****************
ok: [dgx1]
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : get currently configured nameservers] ************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : check systemd-resolved] **************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : set dns facts] ***********************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : check if kubelet is configured] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : check if early DNS configuration stage] **********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : target resolv.conf files] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : target temporary resolvconf cloud init file (Flatcar Container Linux by Kinvolk / Fedora CoreOS)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhclient.conf] ***
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : target dhclient hook file for Red Hat family] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *****
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : generate search domains to resolvconf] ***********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *****
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : gather os specific variables] ********************
ok: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)

TASK [kubernetes/preinstall : set etcd vars if using kubeadm mode] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : check /usr readonly] *****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : set alternate flexvolume path] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] ***
ok: [mgmt1] => (item=kube_control_plane) => changed=false 
  ansible_loop_var: item
  item: kube_control_plane
  msg: All assertions passed
ok: [mgmt1] => (item=kube_node) => changed=false 
  ansible_loop_var: item
  item: kube_node
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if the os does not support] *****************
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if unknown network plugin] ******************
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *******
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [mgmt1] => (item={'name': 'download_run_once', 'value': False}) => changed=false 
  ansible_loop_var: item
  item:
    name: download_run_once
    value: false
  msg: All assertions passed
ok: [mgmt1] => (item={'name': 'deploy_netchecker', 'value': False}) => changed=false 
  ansible_loop_var: item
  item:
    name: deploy_netchecker
    value: false
  msg: All assertions passed
ok: [mgmt1] => (item={'name': 'download_always_pull', 'value': False}) => changed=false 
  ansible_loop_var: item
  item:
    name: download_always_pull
    value: false
  msg: All assertions passed
ok: [mgmt1] => (item={'name': 'helm_enabled', 'value': True}) => changed=false 
  ansible_loop_var: item
  item:
    name: helm_enabled
    value: true
  msg: All assertions passed
ok: [mgmt1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => changed=false 
  ansible_loop_var: item
  item:
    name: openstack_lbaas_enabled
    value: false
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] ***************
ok: [mgmt1] => changed=false 
  msg: All assertions passed
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *********
ok: [mgmt1] => changed=false 
  msg: All assertions passed
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
skipping: [mgmt1]
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Guarantee that enough network address space is available for all pods] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Ensure ping package] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when OCI cloud controller is enabled] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if kernel version is too low] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
ok: [mgmt1] => changed=false 
  msg: All assertions passed
ok: [dgx1] => changed=false 
  msg: All assertions passed
ok: [dgx2] => changed=false 
  msg: All assertions passed
ok: [dgx3] => changed=false 
  msg: All assertions passed
ok: [dgx4] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : check cloud_provider value] **********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Check that IP range is enough for the nodes] *****
skipping: [mgmt1]

TASK [kubernetes/preinstall : Stop if unknown dns mode] ************************
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *****************
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if unknown cert_management] *****************
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *****************
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] ***
ok: [mgmt1] => changed=false 
  msg: All assertions passed
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Warn the user if they are still using `etcd_kubeadm_enabled`] ***
skipping: [mgmt1]

TASK [kubernetes/preinstall : Stop if `etcd_kubeadm_enabled` is defined and `etcd_deployment_type` is not `kubeadm` or `host`] ***
skipping: [mgmt1]

TASK [kubernetes/preinstall : Stop if download_localhost is enabled but download_run_once is not] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if kata_containers_enabled is enabled when container_manager is docker] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if gvisor_enabled is enabled when container_manager is not containerd] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if download_localhost is enabled for Flatcar Container Linux] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Ensure minimum containerd version] ***************
ok: [mgmt1] => changed=false 
  msg: All assertions passed

TASK [kubernetes/preinstall : Stop if using deprecated containerd_config variable] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if auto_renew_certificates is enabled when certificates are managed externally (kube_external_ca_mode is true)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop if using deprecated comma separated list for admission plugins] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
ok: [mgmt1] => (item=/etc/kubernetes)
ok: [dgx1] => (item=/etc/kubernetes)
ok: [dgx2] => (item=/etc/kubernetes)
ok: [mgmt1] => (item=/etc/kubernetes/manifests)
ok: [dgx3] => (item=/etc/kubernetes)
ok: [dgx1] => (item=/etc/kubernetes/manifests)
ok: [dgx4] => (item=/etc/kubernetes)
ok: [dgx2] => (item=/etc/kubernetes/manifests)
ok: [mgmt1] => (item=/usr/local/bin/kubernetes-scripts)
ok: [dgx3] => (item=/etc/kubernetes/manifests)
ok: [dgx1] => (item=/usr/local/bin/kubernetes-scripts)
ok: [dgx4] => (item=/etc/kubernetes/manifests)
ok: [dgx2] => (item=/usr/local/bin/kubernetes-scripts)
ok: [mgmt1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [dgx3] => (item=/usr/local/bin/kubernetes-scripts)
ok: [dgx1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [dgx4] => (item=/usr/local/bin/kubernetes-scripts)
ok: [dgx2] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [dgx3] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [dgx4] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)

TASK [kubernetes/preinstall : Create other directories of root owner] **********
ok: [mgmt1] => (item=/etc/kubernetes/ssl)
ok: [dgx1] => (item=/etc/kubernetes/ssl)
ok: [dgx2] => (item=/etc/kubernetes/ssl)
ok: [mgmt1] => (item=/usr/local/bin)
ok: [dgx3] => (item=/etc/kubernetes/ssl)
ok: [dgx1] => (item=/usr/local/bin)
ok: [dgx2] => (item=/usr/local/bin)
ok: [dgx4] => (item=/etc/kubernetes/ssl)
ok: [dgx3] => (item=/usr/local/bin)
ok: [dgx4] => (item=/usr/local/bin)

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Create cni directories] **************************
ok: [mgmt1] => (item=/etc/cni/net.d)
changed: [mgmt1] => (item=/opt/cni/bin)
ok: [dgx1] => (item=/etc/cni/net.d)
ok: [dgx2] => (item=/etc/cni/net.d)
ok: [dgx1] => (item=/opt/cni/bin)
ok: [dgx3] => (item=/etc/cni/net.d)
ok: [mgmt1] => (item=/var/lib/calico)
ok: [dgx2] => (item=/opt/cni/bin)
ok: [dgx1] => (item=/var/lib/calico)
ok: [dgx4] => (item=/etc/cni/net.d)
ok: [dgx3] => (item=/opt/cni/bin)
ok: [dgx2] => (item=/var/lib/calico)
ok: [dgx4] => (item=/opt/cni/bin)
ok: [dgx3] => (item=/var/lib/calico)
ok: [dgx4] => (item=/var/lib/calico)

TASK [kubernetes/preinstall : Create local volume provisioner directories] *****
skipping: [mgmt1] => (item=local-storage) 
skipping: [dgx1] => (item=local-storage) 
skipping: [dgx2] => (item=local-storage) 
skipping: [dgx3] => (item=local-storage) 
skipping: [dgx4] => (item=local-storage) 

TASK [kubernetes/preinstall : create temporary resolveconf cloud init file] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Add domain/search/nameservers/options to resolv.conf] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Remove search/domain/nameserver options before block] ***
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'options\\s']) 

TASK [kubernetes/preinstall : Remove search/domain/nameserver options after block] ***
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [mgmt1] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx1] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx2] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx3] => (item=['/etc/resolv.conf', 'options\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'search\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'nameserver\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'domain\\s']) 
skipping: [dgx4] => (item=['/etc/resolv.conf', 'options\\s']) 

TASK [kubernetes/preinstall : get temporary resolveconf cloud init file content] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : persist resolvconf cloud init file] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Write resolved.conf] *****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : NetworkManager | Ensure NetworkManager conf.d dir] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : NetworkManager | Prevent NetworkManager from managing Calico interfaces (cali*/tunl*/vxlan.calico)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : NetworkManager | Prevent NetworkManager from managing K8S interfaces (kube-ipvs0/nodelocaldns)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : NetworkManager | Add nameservers to NM configuration] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : NetworkManager | Add DNS search to NM configuration] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : NetworkManager | Add DNS options to NM configuration] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Update package management cache (zypper) - SUSE] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Add Debian Backports apt repo] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Set libseccomp2 pin priority to apt_preferences on Debian buster] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Update package management cache (APT)] ***********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Remove legacy docker repo file] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Install python3-dnf for latest RedHat versions] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Install epel-release on RHEL derivatives] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Install packages requirements] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Install ipvsadm for ClearLinux] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Confirm selinux deployed] ************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Set selinux policy] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Disable IPv6 DNS lookup] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *****
ok: [mgmt1] => (item=ipv4-ip_forward.conf)
ok: [dgx1] => (item=ipv4-ip_forward.conf)
ok: [mgmt1] => (item=bridge-nf-call.conf)
ok: [dgx2] => (item=ipv4-ip_forward.conf)
ok: [dgx3] => (item=ipv4-ip_forward.conf)
ok: [dgx2] => (item=bridge-nf-call.conf)
ok: [dgx4] => (item=ipv4-ip_forward.conf)
ok: [dgx1] => (item=bridge-nf-call.conf)
ok: [dgx3] => (item=bridge-nf-call.conf)
ok: [dgx4] => (item=bridge-nf-call.conf)

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Enable ipv6 forwarding] **************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Set fs.may_detach_mounts if needed] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] ************
ok: [mgmt1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [dgx1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [mgmt1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [dgx2] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [dgx1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [dgx3] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [mgmt1] => (item={'name': 'kernel.panic', 'value': 10})
ok: [dgx2] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [dgx4] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [dgx1] => (item={'name': 'kernel.panic', 'value': 10})
ok: [dgx3] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [mgmt1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [dgx4] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [dgx1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [dgx3] => (item={'name': 'kernel.panic', 'value': 10})
ok: [mgmt1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [mgmt1] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [dgx1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [dgx3] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [dgx4] => (item={'name': 'kernel.panic', 'value': 10})
ok: [dgx3] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [dgx1] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [dgx4] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [dgx3] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [dgx4] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [dgx2] => (item={'name': 'kernel.panic', 'value': 10})
ok: [dgx4] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [dgx2] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [dgx2] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [dgx2] => (item={'name': 'vm.panic_on_oom', 'value': 0})

TASK [kubernetes/preinstall : Check dummy module] ******************************
ok: [dgx1]
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Set additional sysctl variables] *****************

TASK [kubernetes/preinstall : Ensure NTP package] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Disable systemd-timesyncd] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Set fact NTP settings] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Generate NTP configuration file.] ****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Stop the NTP Deamon For Sync Immediately] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Force Sync NTP Immediately] **********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Ensure NTP service is started and enabled] *******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Ensure tzdata package] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Set timezone] ************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Hosts | create list from inventory] **************
ok: [mgmt1 -> localhost]

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ******
changed: [mgmt1]
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

TASK [kubernetes/preinstall : Hosts | populate kubernetes loadbalancer address into hosts file] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
skipping: [mgmt1] => (item=# Hosts file -- Don't edit manually!) 
skipping: [mgmt1] => (item=#) 
skipping: [mgmt1] => (item=# Ansible managed) 
skipping: [mgmt1] => (item=# Localhost) 
ok: [mgmt1] => (item=127.0.0.1  localhost.localdomain  localhost)
skipping: [mgmt1] => (item=) 
skipping: [mgmt1] => (item=# ) 
skipping: [mgmt1] => (item=# Hosts managed by Ansible) 
skipping: [mgmt1] => (item=#) 
skipping: [mgmt1] => (item=# dgx1) 
skipping: [mgmt1] => (item=10.0.242.21    dgx1 dgx1-enp226s0  dgx1) 
skipping: [mgmt1] => (item=# dgx2) 
skipping: [mgmt1] => (item=10.0.242.22    dgx2 dgx2-enp226s0  dgx2) 
skipping: [mgmt1] => (item=# dgx3) 
skipping: [mgmt1] => (item=10.0.242.23    dgx3 dgx3-enp226s0  dgx3) 
skipping: [mgmt1] => (item=# dgx4) 
skipping: [mgmt1] => (item=169.254.0.18    dgx4-bmc_redfish0) 
skipping: [mgmt1] => (item=10.0.242.24    dgx4 dgx4-enp226s0  dgx4) 
skipping: [mgmt1] => (item=# mgmt1) 
skipping: [dgx1] => (item=# Hosts file -- Don't edit manually!) 
skipping: [mgmt1] => (item=10.0.241.12    mgmt1 mgmt1-ens160  mgmt1) 
skipping: [dgx1] => (item=#) 
skipping: [mgmt1] => (item=10.233.65.64    mgmt1-vxlan.calico) 
skipping: [mgmt1] => (item=) 
skipping: [dgx1] => (item=# Ansible managed) 
skipping: [mgmt1] => (item=# Ansible inventory hosts BEGIN) 
skipping: [mgmt1] => (item=10.0.241.12 mgmt1.cluster.local mgmt1 ) 
skipping: [mgmt1] => (item=10.0.242.21 dgx1.cluster.local dgx1 ) 
skipping: [dgx1] => (item=# Localhost) 
skipping: [mgmt1] => (item=10.0.242.22 dgx2.cluster.local dgx2 ) 
skipping: [mgmt1] => (item=10.0.242.23 dgx3.cluster.local dgx3 ) 
skipping: [mgmt1] => (item=10.0.242.24 dgx4.cluster.local dgx4 ) 
skipping: [mgmt1] => (item=# Ansible inventory hosts END) 
ok: [dgx1] => (item=127.0.0.1  localhost.localdomain  localhost)
skipping: [dgx1] => (item=) 
skipping: [dgx1] => (item=# ) 
skipping: [dgx1] => (item=# Hosts managed by Ansible) 
skipping: [dgx1] => (item=#) 
skipping: [dgx1] => (item=# dgx1) 
skipping: [dgx1] => (item=10.0.242.21    dgx1 dgx1-enp226s0  dgx1) 
skipping: [dgx1] => (item=# dgx2) 
skipping: [dgx1] => (item=10.0.242.22    dgx2 dgx2-enp226s0  dgx2) 
skipping: [dgx1] => (item=# dgx3) 
skipping: [dgx1] => (item=10.0.242.23    dgx3 dgx3-enp226s0  dgx3) 
skipping: [dgx1] => (item=# dgx4) 
skipping: [dgx1] => (item=169.254.0.18    dgx4-bmc_redfish0) 
skipping: [dgx1] => (item=10.0.242.24    dgx4 dgx4-enp226s0  dgx4) 
skipping: [dgx1] => (item=# mgmt1) 
skipping: [dgx1] => (item=10.0.241.12    mgmt1 mgmt1-ens160  mgmt1) 
skipping: [dgx1] => (item=10.233.65.64    mgmt1-vxlan.calico) 
skipping: [dgx1] => (item=) 
skipping: [dgx1] => (item=# Ansible inventory hosts BEGIN) 
skipping: [dgx1] => (item=10.0.241.12 mgmt1.cluster.local mgmt1 ) 
skipping: [dgx1] => (item=10.0.242.21 dgx1.cluster.local dgx1 ) 
skipping: [dgx1] => (item=10.0.242.22 dgx2.cluster.local dgx2 ) 
skipping: [dgx1] => (item=10.0.242.23 dgx3.cluster.local dgx3 ) 
skipping: [dgx1] => (item=10.0.242.24 dgx4.cluster.local dgx4 ) 
skipping: [dgx1] => (item=# Ansible inventory hosts END) 
skipping: [dgx2] => (item=# Hosts file -- Don't edit manually!) 
skipping: [dgx2] => (item=#) 
skipping: [dgx2] => (item=# Ansible managed) 
skipping: [dgx2] => (item=# Localhost) 
ok: [dgx2] => (item=127.0.0.1  localhost.localdomain  localhost)
skipping: [dgx2] => (item=) 
skipping: [dgx2] => (item=# ) 
skipping: [dgx2] => (item=# Hosts managed by Ansible) 
skipping: [dgx2] => (item=#) 
skipping: [dgx2] => (item=# dgx1) 
skipping: [dgx2] => (item=10.0.242.21    dgx1 dgx1-enp226s0  dgx1) 
skipping: [dgx2] => (item=# dgx2) 
skipping: [dgx2] => (item=10.0.242.22    dgx2 dgx2-enp226s0  dgx2) 
skipping: [dgx2] => (item=# dgx3) 
skipping: [dgx2] => (item=10.0.242.23    dgx3 dgx3-enp226s0  dgx3) 
skipping: [dgx2] => (item=# dgx4) 
skipping: [dgx3] => (item=# Hosts file -- Don't edit manually!) 
skipping: [dgx2] => (item=169.254.0.18    dgx4-bmc_redfish0) 
skipping: [dgx3] => (item=#) 
skipping: [dgx2] => (item=10.0.242.24    dgx4 dgx4-enp226s0  dgx4) 
skipping: [dgx2] => (item=# mgmt1) 
skipping: [dgx3] => (item=# Ansible managed) 
skipping: [dgx2] => (item=10.0.241.12    mgmt1 mgmt1-ens160  mgmt1) 
skipping: [dgx3] => (item=# Localhost) 
skipping: [dgx2] => (item=10.233.65.64    mgmt1-vxlan.calico) 
skipping: [dgx2] => (item=) 
skipping: [dgx2] => (item=# Ansible inventory hosts BEGIN) 
skipping: [dgx2] => (item=10.0.241.12 mgmt1.cluster.local mgmt1 ) 
skipping: [dgx2] => (item=10.0.242.21 dgx1.cluster.local dgx1 ) 
skipping: [dgx2] => (item=10.0.242.22 dgx2.cluster.local dgx2 ) 
skipping: [dgx2] => (item=10.0.242.23 dgx3.cluster.local dgx3 ) 
skipping: [dgx2] => (item=10.0.242.24 dgx4.cluster.local dgx4 ) 
skipping: [dgx2] => (item=# Ansible inventory hosts END) 
ok: [dgx3] => (item=127.0.0.1  localhost.localdomain  localhost)
skipping: [dgx3] => (item=) 
skipping: [dgx3] => (item=# ) 
skipping: [dgx3] => (item=# Hosts managed by Ansible) 
skipping: [dgx3] => (item=#) 
skipping: [dgx3] => (item=# dgx1) 
skipping: [dgx3] => (item=10.0.242.21    dgx1 dgx1-enp226s0  dgx1) 
skipping: [dgx3] => (item=# dgx2) 
skipping: [dgx3] => (item=10.0.242.22    dgx2 dgx2-enp226s0  dgx2) 
skipping: [dgx3] => (item=# dgx3) 
skipping: [dgx3] => (item=10.0.242.23    dgx3 dgx3-enp226s0  dgx3) 
skipping: [dgx3] => (item=# dgx4) 
skipping: [dgx3] => (item=169.254.0.18    dgx4-bmc_redfish0) 
skipping: [dgx4] => (item=# Hosts file -- Don't edit manually!) 
skipping: [dgx4] => (item=#) 
skipping: [dgx3] => (item=10.0.242.24    dgx4 dgx4-enp226s0  dgx4) 
skipping: [dgx4] => (item=# Ansible managed) 
skipping: [dgx3] => (item=# mgmt1) 
skipping: [dgx4] => (item=# Localhost) 
skipping: [dgx3] => (item=10.0.241.12    mgmt1 mgmt1-ens160  mgmt1) 
skipping: [dgx3] => (item=10.233.65.64    mgmt1-vxlan.calico) 
skipping: [dgx3] => (item=) 
skipping: [dgx3] => (item=# Ansible inventory hosts BEGIN) 
skipping: [dgx3] => (item=10.0.241.12 mgmt1.cluster.local mgmt1 ) 
skipping: [dgx3] => (item=10.0.242.21 dgx1.cluster.local dgx1 ) 
skipping: [dgx3] => (item=10.0.242.22 dgx2.cluster.local dgx2 ) 
ok: [dgx4] => (item=127.0.0.1  localhost.localdomain  localhost)
skipping: [dgx3] => (item=10.0.242.23 dgx3.cluster.local dgx3 ) 
skipping: [dgx4] => (item=) 
skipping: [dgx3] => (item=10.0.242.24 dgx4.cluster.local dgx4 ) 
skipping: [dgx3] => (item=# Ansible inventory hosts END) 
skipping: [dgx4] => (item=# ) 
skipping: [dgx4] => (item=# Hosts managed by Ansible) 
skipping: [dgx4] => (item=#) 
skipping: [dgx4] => (item=# dgx1) 
skipping: [dgx4] => (item=10.0.242.21    dgx1 dgx1-enp226s0  dgx1) 
skipping: [dgx4] => (item=# dgx2) 
skipping: [dgx4] => (item=10.0.242.22    dgx2 dgx2-enp226s0  dgx2) 
skipping: [dgx4] => (item=# dgx3) 
skipping: [dgx4] => (item=10.0.242.23    dgx3 dgx3-enp226s0  dgx3) 
skipping: [dgx4] => (item=# dgx4) 
skipping: [dgx4] => (item=169.254.0.18    dgx4-bmc_redfish0) 
skipping: [dgx4] => (item=10.0.242.24    dgx4 dgx4-enp226s0  dgx4) 
skipping: [dgx4] => (item=# mgmt1) 
skipping: [dgx4] => (item=10.0.241.12    mgmt1 mgmt1-ens160  mgmt1) 
skipping: [dgx4] => (item=10.233.65.64    mgmt1-vxlan.calico) 
skipping: [dgx4] => (item=) 
skipping: [dgx4] => (item=# Ansible inventory hosts BEGIN) 
skipping: [dgx4] => (item=10.0.241.12 mgmt1.cluster.local mgmt1 ) 
skipping: [dgx4] => (item=10.0.242.21 dgx1.cluster.local dgx1 ) 
skipping: [dgx4] => (item=10.0.242.22 dgx2.cluster.local dgx2 ) 
skipping: [dgx4] => (item=10.0.242.23 dgx3.cluster.local dgx3 ) 
skipping: [dgx4] => (item=10.0.242.24 dgx4.cluster.local dgx4 ) 
skipping: [dgx4] => (item=# Ansible inventory hosts END) 

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
ok: [mgmt1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [mgmt1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [dgx1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [dgx1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [dgx2] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [dgx2] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [dgx3] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [dgx3] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [dgx4] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [dgx4] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ********
changed: [mgmt1] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [dgx1] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [dgx2] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [mgmt1] => (item={'key': '::1', 'value': ['localhost6', 'localhost6.localdomain']})
changed: [dgx1] => (item={'key': '::1', 'value': ['localhost6', 'localhost6.localdomain']})
changed: [dgx2] => (item={'key': '::1', 'value': ['localhost6', 'localhost6.localdomain']})
changed: [dgx3] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [dgx4] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [dgx3] => (item={'key': '::1', 'value': ['localhost6', 'localhost6.localdomain']})
changed: [dgx4] => (item={'key': '::1', 'value': ['localhost6', 'localhost6.localdomain']})

TASK [kubernetes/preinstall : Update facts] ************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (RH-only)] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Remove kubespray specific config from dhclient config] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Remove kubespray specific dhclient hook] *********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Flush handlers] **********************************

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/preinstall : install growpart] ********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Gather mounts facts] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : Search root filesystem device] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : check if growpart needs to be run] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : check fs type] ***********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : run growpart] ************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/preinstall : run xfs_growfs] **********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [Run calico checks] *******************************************************

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Stop if incompatible network plugin and cloudprovider] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Stop if supported Calico versions] ***************
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Check if calicoctl.sh exists] ********************
ok: [mgmt1 -> mgmt1]

TASK [network_plugin/calico : Check if calico ready] ***************************
changed: [mgmt1 -> mgmt1]

TASK [network_plugin/calico : Get current calico version] **********************
ok: [mgmt1 -> mgmt1]

TASK [network_plugin/calico : Assert that current calico version is enough for upgrade] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Check that cluster_id is set if calico_rr enabled] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Check that calico_rr nodes are in k8s_cluster group] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Check vars defined correctly] ********************
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Check calico network backend defined correctly] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *****
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Get Calico default-pool configuration] ***********
ok: [mgmt1 -> mgmt1]

TASK [network_plugin/calico : Set calico_pool_conf] ****************************
ok: [mgmt1 -> mgmt1]

TASK [network_plugin/calico : Check if inventory match current cluster configuration] ***
ok: [mgmt1 -> mgmt1] => changed=false 
  msg: All assertions passed

TASK [network_plugin/calico : Check kdd calico_datastore if calico_apiserver_enabled] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Check kdd calico_datastore if typha_enabled] *****
skipping: [mgmt1]

TASK [network_plugin/calico : Check ipip mode is Never for calico ipv6] ********
skipping: [mgmt1]

TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/validate-container-engine : Populate service facts] *****
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/validate-container-engine : Check if containerd is installed] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/validate-container-engine : Check if docker is installed] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/validate-container-engine : Check if crio is installed] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [Drain node] **************************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/validate-container-engine : Stop kubelet] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 
skipping: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 
skipping: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 
skipping: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 
skipping: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 

TASK [container-engine/runc : runc | check if fedora coreos] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | set is_ostree] ****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Download runc binary] *********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : Copy runc binary from download dir] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Remove orphaned binary] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crictl : install crictl] ********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Remove containerd repository for RedHat os family] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Remove containerd repository for Debian os family] ***
skipping: [mgmt1] => (item=) 
skipping: [dgx1] => (item=) 
skipping: [dgx2] => (item=) 
skipping: [dgx3] => (item=) 
skipping: [dgx4] => (item=) 

TASK [container-engine/containerd : containerd | Stop containerd service] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Remove configuration files] ***
skipping: [mgmt1] => (item=/etc/systemd/system/containerd.service) 
skipping: [mgmt1] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [mgmt1] => (item=/etc/containerd) 
skipping: [mgmt1] => (item=/var/lib/containerd) 
skipping: [mgmt1] => (item=/run/containerd) 
skipping: [dgx1] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx1] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx1] => (item=/etc/containerd) 
skipping: [dgx1] => (item=/var/lib/containerd) 
skipping: [dgx1] => (item=/run/containerd) 
skipping: [dgx2] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx2] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx2] => (item=/etc/containerd) 
skipping: [dgx2] => (item=/var/lib/containerd) 
skipping: [dgx2] => (item=/run/containerd) 
skipping: [dgx3] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx3] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx3] => (item=/etc/containerd) 
skipping: [dgx3] => (item=/var/lib/containerd) 
skipping: [dgx3] => (item=/run/containerd) 
skipping: [dgx4] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx4] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx4] => (item=/etc/containerd) 
skipping: [dgx4] => (item=/var/lib/containerd) 
skipping: [dgx4] => (item=/run/containerd) 

TASK [Drain node] **************************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/validate-container-engine : Stop kubelet] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***
skipping: [mgmt1] => (item=git) 
skipping: [mgmt1] => (item=make) 
skipping: [dgx1] => (item=git) 
skipping: [dgx1] => (item=make) 
skipping: [dgx2] => (item=git) 
skipping: [dgx2] => (item=make) 
skipping: [dgx3] => (item=git) 
skipping: [dgx3] => (item=make) 
skipping: [dgx4] => (item=git) 
skipping: [dgx4] => (item=make) 

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Get package facts] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Find docker packages] *****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Stop all running container] ***********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : reset | remove all containers] *****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Stop docker service] ******************
skipping: [mgmt1] => (item=docker) 
skipping: [mgmt1] => (item=docker.socket) 
skipping: [mgmt1] => (item=containerd) 
skipping: [dgx1] => (item=docker) 
skipping: [dgx1] => (item=docker.socket) 
skipping: [dgx1] => (item=containerd) 
skipping: [dgx2] => (item=docker) 
skipping: [dgx2] => (item=docker.socket) 
skipping: [dgx2] => (item=containerd) 
skipping: [dgx3] => (item=docker) 
skipping: [dgx3] => (item=docker.socket) 
skipping: [dgx3] => (item=containerd) 
skipping: [dgx4] => (item=docker) 
skipping: [dgx4] => (item=docker.socket) 
skipping: [dgx4] => (item=containerd) 

TASK [container-engine/docker : Docker | Remove dpkg hold] *********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Remove docker package] ****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | ensure docker-ce repository is removed] ***
skipping: [mgmt1] => (item=) 
skipping: [dgx1] => (item=) 
skipping: [dgx2] => (item=) 
skipping: [dgx3] => (item=) 
skipping: [dgx4] => (item=) 

TASK [container-engine/docker : Docker | Remove docker repository on Fedora] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Remove docker repository on RedHat/CentOS/Oracle/AlmaLinux Linux] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Docker | Remove docker configuration files] ****
skipping: [mgmt1] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [mgmt1] => (item=/etc/systemd/system/docker.socket) 
skipping: [mgmt1] => (item=/etc/systemd/system/docker.service) 
skipping: [mgmt1] => (item=/etc/systemd/system/containerd.service) 
skipping: [mgmt1] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [mgmt1] => (item=/var/lib/docker) 
skipping: [mgmt1] => (item=/etc/docker) 
skipping: [dgx1] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [dgx1] => (item=/etc/systemd/system/docker.socket) 
skipping: [dgx1] => (item=/etc/systemd/system/docker.service) 
skipping: [dgx1] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx1] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx1] => (item=/var/lib/docker) 
skipping: [dgx2] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [dgx1] => (item=/etc/docker) 
skipping: [dgx2] => (item=/etc/systemd/system/docker.socket) 
skipping: [dgx2] => (item=/etc/systemd/system/docker.service) 
skipping: [dgx2] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx2] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx2] => (item=/var/lib/docker) 
skipping: [dgx2] => (item=/etc/docker) 
skipping: [dgx3] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [dgx3] => (item=/etc/systemd/system/docker.socket) 
skipping: [dgx3] => (item=/etc/systemd/system/docker.service) 
skipping: [dgx3] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx3] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx4] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [dgx3] => (item=/var/lib/docker) 
skipping: [dgx4] => (item=/etc/systemd/system/docker.socket) 
skipping: [dgx3] => (item=/etc/docker) 
skipping: [dgx4] => (item=/etc/systemd/system/docker.service) 
skipping: [dgx4] => (item=/etc/systemd/system/containerd.service) 
skipping: [dgx4] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dgx4] => (item=/var/lib/docker) 
skipping: [dgx4] => (item=/etc/docker) 

TASK [container-engine/docker : Docker | systemctl daemon-reload] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [Drain node] **************************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/validate-container-engine : Stop kubelet] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | check if fedora coreos] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | set is_ostree] ****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Download runc binary] *********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : Copy runc binary from download dir] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Remove orphaned binary] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crictl : install crictl] ********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | check if fedora coreos] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | set is_ostree] ************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | Uninstall skopeo package managed by package manager] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | Download skopeo binary] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : Copy skopeo binary from download dir] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Kubic repo name for debian os family] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Remove kubic apt repo] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Remove cri-o apt repo] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Remove CRI-O kubic yum repo] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Remove CRI-O kubic yum repo] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Run yum-clean-metadata] *****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Remove crictl] **************************
skipping: [mgmt1] => (item=/etc/crictl.yaml) 
skipping: [mgmt1] => (item=/usr/local/bin/crictl) 
skipping: [dgx1] => (item=/etc/crictl.yaml) 
skipping: [dgx1] => (item=/usr/local/bin/crictl) 
skipping: [dgx2] => (item=/etc/crictl.yaml) 
skipping: [dgx2] => (item=/usr/local/bin/crictl) 
skipping: [dgx3] => (item=/etc/crictl.yaml) 
skipping: [dgx3] => (item=/usr/local/bin/crictl) 
skipping: [dgx4] => (item=/etc/crictl.yaml) 
skipping: [dgx4] => (item=/usr/local/bin/crictl) 

TASK [container-engine/cri-o : CRI-O | Stop crio service] **********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Remove CRI-O configuration files] *******
skipping: [mgmt1] => (item=/etc/crio) 
skipping: [mgmt1] => (item=/etc/containers) 
skipping: [mgmt1] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx1] => (item=/etc/crio) 
skipping: [dgx1] => (item=/etc/containers) 
skipping: [dgx1] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx2] => (item=/etc/crio) 
skipping: [dgx2] => (item=/etc/containers) 
skipping: [dgx2] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx3] => (item=/etc/crio) 
skipping: [dgx3] => (item=/etc/containers) 
skipping: [dgx3] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx4] => (item=/etc/crio) 
skipping: [dgx4] => (item=/etc/containers) 
skipping: [dgx4] => (item=/etc/systemd/system/crio.service.d) 

TASK [container-engine/cri-o : CRI-O | Remove dpkg hold] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O | Uninstall CRI-O package] ****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/kata-containers : kata-containers | Download kata binary] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/kata-containers : kata-containers | Copy kata-containers binary] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/kata-containers : kata-containers | Create config directory] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/kata-containers : kata-containers | Set configuration] ***
skipping: [mgmt1] => (item=configuration-qemu.toml) 
skipping: [dgx1] => (item=configuration-qemu.toml) 
skipping: [dgx2] => (item=configuration-qemu.toml) 
skipping: [dgx3] => (item=configuration-qemu.toml) 
skipping: [dgx4] => (item=configuration-qemu.toml) 

TASK [container-engine/kata-containers : kata-containers | Set containerd bin] ***
skipping: [mgmt1] => (item=qemu) 
skipping: [dgx1] => (item=qemu) 
skipping: [dgx2] => (item=qemu) 
skipping: [dgx3] => (item=qemu) 
skipping: [dgx4] => (item=qemu) 

TASK [container-engine/kata-containers : kata-containers | Load vhost kernel modules] ***
skipping: [mgmt1] => (item=vhost_vsock) 
skipping: [mgmt1] => (item=vhost_net) 
skipping: [dgx1] => (item=vhost_vsock) 
skipping: [dgx1] => (item=vhost_net) 
skipping: [dgx2] => (item=vhost_vsock) 
skipping: [dgx2] => (item=vhost_net) 
skipping: [dgx3] => (item=vhost_vsock) 
skipping: [dgx3] => (item=vhost_net) 
skipping: [dgx4] => (item=vhost_vsock) 
skipping: [dgx4] => (item=vhost_net) 

TASK [container-engine/kata-containers : kata-containers | Persist vhost kernel modules] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/gvisor : gVisor | Download runsc binary] ****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/gvisor : gVisor | Download containerd-shim-runsc-v1 binary] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/gvisor : gVisor | Copy binaries] ************************
skipping: [mgmt1] => (item=runsc) 
skipping: [mgmt1] => (item=containerd-shim-runsc-v1) 
skipping: [dgx1] => (item=runsc) 
skipping: [dgx1] => (item=containerd-shim-runsc-v1) 
skipping: [dgx2] => (item=runsc) 
skipping: [dgx2] => (item=containerd-shim-runsc-v1) 
skipping: [dgx3] => (item=runsc) 
skipping: [dgx3] => (item=containerd-shim-runsc-v1) 
skipping: [dgx4] => (item=runsc) 
skipping: [dgx4] => (item=containerd-shim-runsc-v1) 

TASK [container-engine/crun : crun | Download crun binary] *********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crun : Copy crun binary from download dir] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/youki : youki | Download youki] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/youki : youki | Copy youki binary from download dir] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | check if fedora coreos] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | set is_ostree] ****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Download runc binary] *********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : Copy runc binary from download dir] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : runc | Remove orphaned binary] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crictl : install crictl] ********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | check if fedora coreos] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | set is_ostree] ************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | Uninstall skopeo package managed by package manager] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : skopeo | Download skopeo binary] ***************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/skopeo : Copy skopeo binary from download dir] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | check if fedora coreos] *****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | set is_ostree] **************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | get ostree version] *********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | Download cri-o] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Check that amzn2-extras.repo exists] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Find docker repo in amzn2-extras.repo file] *****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove docker repository] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Add container-selinux yum repo] *****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : CRI-O kubic repo name for debian os family] *****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic apt repo key] *********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic apt repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic cri-o apt repo] *******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic yum repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic yum repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic yum repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic yum repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic yum repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Remove legacy CRI-O kubic yum repo] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : Disable modular repos for CRI-O] ****************
skipping: [mgmt1] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [mgmt1] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 
skipping: [dgx1] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [dgx1] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 
skipping: [dgx2] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [dgx2] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 
skipping: [dgx3] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [dgx3] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 
skipping: [dgx4] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [dgx4] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 

TASK [container-engine/cri-o : Disable CRI-O ex module] ************************
skipping: [mgmt1] => (item=1.22) 
skipping: [mgmt1] => (item=1.23) 
skipping: [mgmt1] => (item=1.24) 
skipping: [dgx1] => (item=1.22) 
skipping: [dgx1] => (item=1.23) 
skipping: [dgx1] => (item=1.24) 
skipping: [dgx2] => (item=1.22) 
skipping: [dgx2] => (item=1.23) 
skipping: [dgx2] => (item=1.24) 
skipping: [dgx3] => (item=1.22) 
skipping: [dgx3] => (item=1.23) 
skipping: [dgx3] => (item=1.24) 
skipping: [dgx4] => (item=1.22) 
skipping: [dgx4] => (item=1.23) 
skipping: [dgx4] => (item=1.24) 

TASK [container-engine/cri-o : cri-o | remove installed packages] **************
skipping: [mgmt1] => (item=cri-o) 
skipping: [mgmt1] => (item=cri-o-runc) 
skipping: [mgmt1] => (item=oci-systemd-hook) 
skipping: [dgx1] => (item=cri-o) 
skipping: [dgx1] => (item=cri-o-runc) 
skipping: [dgx1] => (item=oci-systemd-hook) 
skipping: [dgx2] => (item=cri-o) 
skipping: [dgx2] => (item=cri-o-runc) 
skipping: [dgx2] => (item=oci-systemd-hook) 
skipping: [dgx3] => (item=cri-o) 
skipping: [dgx3] => (item=cri-o-runc) 
skipping: [dgx3] => (item=oci-systemd-hook) 
skipping: [dgx4] => (item=cri-o) 
skipping: [dgx4] => (item=cri-o-runc) 
skipping: [dgx4] => (item=oci-systemd-hook) 

TASK [container-engine/cri-o : cri-o | build a list of crio runtimes with Katacontainers runtimes] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | build a list of crio runtimes with crun runtime] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | build a list of crio runtimes with youki runtime] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | make sure needed folders exist in the system] ***
skipping: [mgmt1] => (item=/etc/crio) 
skipping: [mgmt1] => (item=/etc/containers) 
skipping: [mgmt1] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx1] => (item=/etc/crio) 
skipping: [dgx1] => (item=/etc/containers) 
skipping: [dgx1] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx2] => (item=/etc/crio) 
skipping: [dgx2] => (item=/etc/containers) 
skipping: [dgx2] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx3] => (item=/etc/crio) 
skipping: [dgx3] => (item=/etc/containers) 
skipping: [dgx3] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dgx4] => (item=/etc/crio) 
skipping: [dgx4] => (item=/etc/containers) 
skipping: [dgx4] => (item=/etc/systemd/system/crio.service.d) 

TASK [container-engine/cri-o : cri-o | install cri-o config] *******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | install config.json] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | copy binaries] **************************
skipping: [mgmt1] => (item=conmon) 
skipping: [mgmt1] => (item=crio) 
skipping: [mgmt1] => (item=crio-status) 
skipping: [mgmt1] => (item=pinns) 
skipping: [dgx1] => (item=conmon) 
skipping: [dgx1] => (item=crio) 
skipping: [dgx1] => (item=crio-status) 
skipping: [dgx1] => (item=pinns) 
skipping: [dgx2] => (item=conmon) 
skipping: [dgx2] => (item=crio) 
skipping: [dgx2] => (item=crio-status) 
skipping: [dgx2] => (item=pinns) 
skipping: [dgx3] => (item=conmon) 
skipping: [dgx3] => (item=crio) 
skipping: [dgx3] => (item=crio-status) 
skipping: [dgx3] => (item=pinns) 
skipping: [dgx4] => (item=conmon) 
skipping: [dgx4] => (item=crio) 
skipping: [dgx4] => (item=crio-status) 
skipping: [dgx4] => (item=pinns) 

TASK [container-engine/cri-o : cri-o | copy service file] **********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | update the bin dir for crio.service file] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | copy default policy] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | copy mounts.conf] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | create directory for oci hooks] *********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | set overlay driver] *********************
skipping: [mgmt1] => (item={'option': 'driver', 'value': '"overlay"'}) 
skipping: [mgmt1] => (item={'option': 'graphroot', 'value': '"/var/lib/containers/storage"'}) 
skipping: [dgx1] => (item={'option': 'driver', 'value': '"overlay"'}) 
skipping: [dgx1] => (item={'option': 'graphroot', 'value': '"/var/lib/containers/storage"'}) 
skipping: [dgx2] => (item={'option': 'driver', 'value': '"overlay"'}) 
skipping: [dgx2] => (item={'option': 'graphroot', 'value': '"/var/lib/containers/storage"'}) 
skipping: [dgx3] => (item={'option': 'driver', 'value': '"overlay"'}) 
skipping: [dgx3] => (item={'option': 'graphroot', 'value': '"/var/lib/containers/storage"'}) 
skipping: [dgx4] => (item={'option': 'driver', 'value': '"overlay"'}) 
skipping: [dgx4] => (item={'option': 'graphroot', 'value': '"/var/lib/containers/storage"'}) 

TASK [container-engine/cri-o : cri-o | set metacopy mount options correctly] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | create directory registries configs] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | write registries configs] ***************

TASK [container-engine/cri-o : cri-o | configure unqualified registry settings] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | write cri-o proxy drop-in] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | configure the uid/gid space for user namespaces] ***
skipping: [mgmt1] => (item=/etc/subuid) 
skipping: [mgmt1] => (item=/etc/subgid) 
skipping: [dgx1] => (item=/etc/subuid) 
skipping: [dgx1] => (item=/etc/subgid) 
skipping: [dgx2] => (item=/etc/subuid) 
skipping: [dgx2] => (item=/etc/subgid) 
skipping: [dgx3] => (item=/etc/subuid) 
skipping: [dgx3] => (item=/etc/subgid) 
skipping: [dgx4] => (item=/etc/subuid) 
skipping: [dgx4] => (item=/etc/subgid) 

TASK [container-engine/cri-o : cri-o | ensure crio service is started and enabled] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | trigger service restart only when needed] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-o : cri-o | verify that crio is running] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
ok: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)
ok: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)
ok: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)
ok: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)
ok: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)

TASK [container-engine/runc : runc | check if fedora coreos] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/runc : runc | set is_ostree] ****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/runc : runc | Download runc binary] *********************
included: /home/aioadmin/deepops/submodules/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/runc : prep_download | Set a few facts] *****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/runc : download_file | Starting download of file] *******
ok: [mgmt1] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx1] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx2] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx3] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx4] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64

TASK [container-engine/runc : download_file | Set pathname of cached file] *****
ok: [mgmt1]
ok: [dgx1]
ok: [dgx3]
ok: [dgx2]
ok: [dgx4]

TASK [container-engine/runc : download_file | Create dest directory on node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/runc : download_file | Create local cache directory] ****
skipping: [mgmt1]

TASK [container-engine/runc : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [container-engine/runc : download_file | Validate mirrors] ****************
ok: [dgx1 -> dgx1] => (item=None)
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/runc : download_file | Get the list of working mirrors] ***
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/runc : download_file | Download item] *******************
ok: [dgx1 -> dgx1]
ok: [mgmt1 -> mgmt1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/runc : download_file | Copy file back to ansible host file cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : download_file | Set mode and owner] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : download_file | Extract file archives] ***********
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/runc : extract_file | Unpacking archive] ****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/runc : Copy runc binary from download dir] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/runc : runc | Remove orphaned binary] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/crictl : install crictl] ********************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/container-engine/crictl/tasks/crictl.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/crictl : crictl | Download crictl] **********************
included: /home/aioadmin/deepops/submodules/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/crictl : prep_download | Set a few facts] ***************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/crictl : download_file | Starting download of file] *****
ok: [mgmt1] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx1] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx2] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx3] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx4] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz

TASK [container-engine/crictl : download_file | Set pathname of cached file] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/crictl : download_file | Create dest directory on node] ***
ok: [dgx1]
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/crictl : download_file | Create local cache directory] ***
skipping: [mgmt1]

TASK [container-engine/crictl : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [container-engine/crictl : download_file | Validate mirrors] **************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/crictl : download_file | Get the list of working mirrors] ***
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/crictl : download_file | Download item] *****************
ok: [dgx1 -> dgx1]
ok: [mgmt1 -> mgmt1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/crictl : download_file | Copy file back to ansible host file cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crictl : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crictl : download_file | Set mode and owner] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/crictl : download_file | Extract file archives] *********
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/crictl : extract_file | Unpacking archive] **************
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [mgmt1]
ok: [dgx4]

TASK [container-engine/crictl : Install crictl config] *************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/crictl : Copy crictl binary from download dir] **********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
included: /home/aioadmin/deepops/submodules/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/nerdctl : prep_download | Set a few facts] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/nerdctl : download_file | Starting download of file] ****
ok: [mgmt1] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx1] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx2] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx3] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx4] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz

TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/nerdctl : download_file | Create dest directory on node] ***
ok: [dgx1]
ok: [mgmt1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/nerdctl : download_file | Create local cache directory] ***
skipping: [mgmt1]

TASK [container-engine/nerdctl : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [container-engine/nerdctl : download_file | Validate mirrors] *************
ok: [dgx1 -> dgx1] => (item=None)
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ***
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/nerdctl : download_file | Download item] ****************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/nerdctl : download_file | Copy file back to ansible host file cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : download_file | Set mode and owner] ***********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/nerdctl : download_file | Extract file archives] ********
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/nerdctl : extract_file | Unpacking archive] *************
ok: [dgx1]
ok: [dgx2]
ok: [mgmt1]
ok: [dgx4]
ok: [dgx3]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : Fail containerd setup if distribution is not supported] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Remove any package manager controlled containerd package] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : containerd | Remove containerd repository] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Remove containerd repository] ***
ok: [dgx1] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)
ok: [dgx2] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)
ok: [mgmt1] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)
ok: [dgx3] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)
ok: [dgx4] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)

TASK [container-engine/containerd : containerd | Download containerd] **********
included: /home/aioadmin/deepops/submodules/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/containerd : prep_download | Set a few facts] ***********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : download_file | Starting download of file] ***
ok: [mgmt1] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx1] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx2] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx3] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx4] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz

TASK [container-engine/containerd : download_file | Set pathname of cached file] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : download_file | Create dest directory on node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx3]
ok: [dgx2]
ok: [dgx4]

TASK [container-engine/containerd : download_file | Create local cache directory] ***
skipping: [mgmt1]

TASK [container-engine/containerd : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [container-engine/containerd : download_file | Validate mirrors] **********
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/containerd : download_file | Get the list of working mirrors] ***
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/containerd : download_file | Download item] *************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [container-engine/containerd : download_file | Copy file back to ansible host file cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : download_file | Set mode and owner] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : download_file | Extract file archives] *****
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [container-engine/containerd : extract_file | Unpacking archive] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Unpack containerd archive] ****
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [mgmt1]
ok: [dgx4]

TASK [container-engine/containerd : containerd | Remove orphaned binary] *******
ok: [mgmt1] => (item=containerd)
ok: [dgx1] => (item=containerd)
ok: [dgx2] => (item=containerd)
ok: [mgmt1] => (item=containerd-shim)
ok: [dgx3] => (item=containerd)
ok: [dgx1] => (item=containerd-shim)
ok: [dgx2] => (item=containerd-shim)
ok: [mgmt1] => (item=containerd-shim-runc-v1)
ok: [dgx4] => (item=containerd)
ok: [dgx3] => (item=containerd-shim)
ok: [dgx1] => (item=containerd-shim-runc-v1)
ok: [dgx2] => (item=containerd-shim-runc-v1)
ok: [mgmt1] => (item=containerd-shim-runc-v2)
ok: [dgx4] => (item=containerd-shim)
ok: [dgx3] => (item=containerd-shim-runc-v1)
ok: [dgx1] => (item=containerd-shim-runc-v2)
ok: [dgx2] => (item=containerd-shim-runc-v2)
ok: [mgmt1] => (item=ctr)
ok: [dgx4] => (item=containerd-shim-runc-v1)
ok: [dgx3] => (item=containerd-shim-runc-v2)
ok: [dgx1] => (item=ctr)
ok: [dgx2] => (item=ctr)
ok: [dgx4] => (item=containerd-shim-runc-v2)
ok: [dgx4] => (item=ctr)
ok: [dgx3] => (item=ctr)

TASK [container-engine/containerd : containerd | Generate systemd service for containerd] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : containerd | Ensure containerd directories exist] ***
ok: [mgmt1] => (item=/etc/systemd/system/containerd.service.d)
ok: [dgx1] => (item=/etc/systemd/system/containerd.service.d)
ok: [dgx2] => (item=/etc/systemd/system/containerd.service.d)
ok: [dgx3] => (item=/etc/systemd/system/containerd.service.d)
ok: [mgmt1] => (item=/etc/containerd)
ok: [dgx1] => (item=/etc/containerd)
ok: [dgx2] => (item=/etc/containerd)
ok: [dgx3] => (item=/etc/containerd)
ok: [mgmt1] => (item=/var/lib/containerd)
ok: [dgx4] => (item=/etc/systemd/system/containerd.service.d)
ok: [dgx1] => (item=/var/lib/containerd)
ok: [dgx2] => (item=/var/lib/containerd)
ok: [dgx3] => (item=/var/lib/containerd)
ok: [mgmt1] => (item=/run/containerd)
ok: [dgx1] => (item=/run/containerd)
ok: [dgx4] => (item=/etc/containerd)
ok: [dgx2] => (item=/run/containerd)
ok: [dgx3] => (item=/run/containerd)
ok: [dgx4] => (item=/var/lib/containerd)
ok: [dgx4] => (item=/run/containerd)

TASK [container-engine/containerd : containerd | Write containerd proxy drop-in] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd : containerd | Generate default base_runtime_spec] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : containerd | Store generated default base_runtime_spec] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : containerd | Write base_runtime_specs] *****
ok: [mgmt1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [dgx1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [dgx2] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [dgx3] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [dgx4] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})

TASK [container-engine/containerd : containerd | Copy containerd config file] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd : containerd ｜ Create registry directories] ***

TASK [container-engine/containerd : containerd ｜ Write hosts.toml file] *******

TASK [container-engine/containerd : containerd | Flush handlers] ***************

TASK [container-engine/containerd : containerd | Ensure containerd is started and enabled] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***
skipping: [mgmt1] => (item=git) 
skipping: [mgmt1] => (item=make) 
skipping: [dgx1] => (item=git) 
skipping: [dgx1] => (item=make) 
skipping: [dgx2] => (item=git) 
skipping: [dgx2] => (item=make) 
skipping: [dgx3] => (item=git) 
skipping: [dgx3] => (item=make) 
skipping: [dgx4] => (item=git) 
skipping: [dgx4] => (item=make) 

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : check if fedora coreos] ************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : set is_ostree] *********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : set docker_version for openEuler] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : gather os specific variables] ******************
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker : Warn about Docker version on SUSE] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : include_tasks] *********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Remove legacy docker repo file] ****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | Debian] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Ensure podman not installed. | RedHat] *********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | RedHat] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : ensure docker-ce repository public key is installed] ***
skipping: [mgmt1] => (item=) 
skipping: [dgx1] => (item=) 
skipping: [dgx2] => (item=) 
skipping: [dgx3] => (item=) 
skipping: [dgx4] => (item=) 

TASK [container-engine/docker : ensure docker-ce repository is enabled] ********
skipping: [mgmt1] => (item=) 
skipping: [dgx1] => (item=) 
skipping: [dgx2] => (item=) 
skipping: [dgx3] => (item=) 
skipping: [dgx4] => (item=) 

TASK [container-engine/docker : Configure docker repository on Fedora] *********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Configure docker repository on RedHat/CentOS/OracleLinux/AlmaLinux/KylinLinux] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Remove dpkg hold] ******************************
skipping: [mgmt1] => (item=containerd.io) 
skipping: [mgmt1] => (item=docker-ce) 
skipping: [mgmt1] => (item=docker-ce-cli) 
skipping: [dgx1] => (item=containerd.io) 
skipping: [dgx1] => (item=docker-ce) 
skipping: [dgx1] => (item=docker-ce-cli) 
skipping: [dgx2] => (item=containerd.io) 
skipping: [dgx2] => (item=docker-ce) 
skipping: [dgx2] => (item=docker-ce-cli) 
skipping: [dgx3] => (item=containerd.io) 
skipping: [dgx3] => (item=docker-ce) 
skipping: [dgx3] => (item=docker-ce-cli) 
skipping: [dgx4] => (item=containerd.io) 
skipping: [dgx4] => (item=docker-ce) 
skipping: [dgx4] => (item=docker-ce-cli) 

TASK [container-engine/docker : ensure docker packages are installed] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Tell Debian hosts not to change the docker version with apt upgrade] ***
skipping: [mgmt1] => (item=containerd.io) 
skipping: [mgmt1] => (item=docker-ce) 
skipping: [mgmt1] => (item=docker-ce-cli) 
skipping: [dgx1] => (item=containerd.io) 
skipping: [dgx1] => (item=docker-ce) 
skipping: [dgx1] => (item=docker-ce-cli) 
skipping: [dgx2] => (item=containerd.io) 
skipping: [dgx2] => (item=docker-ce) 
skipping: [dgx2] => (item=docker-ce-cli) 
skipping: [dgx3] => (item=containerd.io) 
skipping: [dgx3] => (item=docker-ce) 
skipping: [dgx3] => (item=docker-ce-cli) 
skipping: [dgx4] => (item=containerd.io) 
skipping: [dgx4] => (item=docker-ce) 
skipping: [dgx4] => (item=docker-ce-cli) 

TASK [container-engine/docker : ensure service is started if docker packages are already present] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : flush handlers so we can wait for docker to come up] ***

TASK [container-engine/docker : include_tasks] *********************************

TASK [container-engine/docker : Create docker service systemd directory if it doesn't exist] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Write docker proxy drop-in] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : get systemd version] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Write docker.service systemd file] *************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Write docker options systemd drop-in] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Write docker dns systemd drop-in] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Copy docker orphan clean up script to the node] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Write docker orphan clean up systemd drop-in] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/docker : Flush handlers] ********************************

TASK [container-engine/docker : ensure docker service is started and enabled] ***
skipping: [mgmt1] => (item=docker) 
skipping: [dgx1] => (item=docker) 
skipping: [dgx2] => (item=docker) 
skipping: [dgx3] => (item=docker) 
skipping: [dgx4] => (item=docker) 

TASK [container-engine/cri-dockerd : runc | Download cri-dockerd binary] *******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-dockerd : Copy cri-dockerd binary from download dir] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [container-engine/cri-dockerd : Generate cri-dockerd systemd unit files] ***
skipping: [mgmt1] => (item=cri-dockerd.service) 
skipping: [mgmt1] => (item=cri-dockerd.socket) 
skipping: [dgx1] => (item=cri-dockerd.service) 
skipping: [dgx1] => (item=cri-dockerd.socket) 
skipping: [dgx2] => (item=cri-dockerd.service) 
skipping: [dgx2] => (item=cri-dockerd.socket) 
skipping: [dgx3] => (item=cri-dockerd.service) 
skipping: [dgx3] => (item=cri-dockerd.socket) 
skipping: [dgx4] => (item=cri-dockerd.service) 
skipping: [dgx4] => (item=cri-dockerd.socket) 

TASK [container-engine/cri-dockerd : Flush handlers] ***************************

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Register docker images info] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : prep_download | Create staging directory on remote node] ******
changed: [mgmt1]
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/prep_kubeadm_images.yml for mgmt1

TASK [download : prep_kubeadm_images | Check kubeadm version matches kubernetes version] ***
skipping: [mgmt1]

TASK [download : prep_kubeadm_images | Download kubeadm binary] ****************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]

TASK [download : download_file | Create dest directory on node] ****************
changed: [mgmt1]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]

TASK [download : prep_kubeadm_images | Create kubeadm config] ******************
ok: [mgmt1]

TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
ok: [mgmt1]

TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] *********
ok: [mgmt1]

TASK [download : prep_kubeadm_images | Generate list of required images] *******
ok: [mgmt1]

TASK [download : prep_kubeadm_images | Parse list of images] *******************
ok: [mgmt1] => (item=registry.k8s.io/kube-apiserver:v1.26.5)
ok: [mgmt1] => (item=registry.k8s.io/kube-controller-manager:v1.26.5)
ok: [mgmt1] => (item=registry.k8s.io/kube-scheduler:v1.26.5)
ok: [mgmt1] => (item=registry.k8s.io/kube-proxy:v1.26.5)

TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] ***
ok: [mgmt1]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_file.yml for mgmt1 => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1 => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1 => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for mgmt1, dgx1, dgx3, dgx2, dgx4 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}})
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/download_container.yml for dgx1, dgx3, dgx2, dgx4 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}})

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1

TASK [download : extract_file | Unpacking archive] *****************************
ok: [mgmt1]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
ok: [dgx1] => 
  msg: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
ok: [dgx2] => 
  msg: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
ok: [dgx3] => 
  msg: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
ok: [dgx4] => 
  msg: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm
ok: [dgx1] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm
ok: [dgx2] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm
ok: [dgx3] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm
ok: [dgx4] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet
ok: [dgx1] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet
ok: [dgx2] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet
ok: [dgx3] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet
ok: [dgx4] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [mgmt1 -> mgmt1]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx1] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx2] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx3] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
ok: [dgx4] => 
  msg: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [dgx1 -> dgx1]
ok: [mgmt1 -> mgmt1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
ok: [dgx1]
ok: [dgx2]
ok: [mgmt1]
ok: [dgx3]
ok: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx1] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx2] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx3] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
ok: [dgx4] => 
  msg: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [dgx1 -> dgx1]
ok: [mgmt1 -> mgmt1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx1] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx2] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx3] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz
ok: [dgx4] => 
  msg: https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [dgx1 -> dgx1]
ok: [mgmt1 -> mgmt1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx1] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx2] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx3] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz
ok: [dgx4] => 
  msg: https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64
ok: [dgx1] => 
  msg: https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64
ok: [dgx2] => 
  msg: https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64
ok: [dgx3] => 
  msg: https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64
ok: [dgx4] => 
  msg: https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx1 -> dgx1] => (item=None)
ok: [dgx1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx2 -> dgx2] => (item=None)
ok: [dgx2 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx3 -> dgx3] => (item=None)
ok: [dgx3 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dgx4 -> dgx4] => (item=None)
ok: [dgx4 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]
ok: [dgx1 -> dgx1]
ok: [dgx2 -> dgx2]
ok: [dgx3 -> dgx3]
ok: [dgx4 -> dgx4]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: quay.io/calico/node
ok: [dgx1] => 
  msg: quay.io/calico/node
ok: [dgx2] => 
  msg: quay.io/calico/node
ok: [dgx3] => 
  msg: quay.io/calico/node
ok: [dgx4] => 
  msg: quay.io/calico/node

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull quay.io/calico/node:v3.25.1 required is: False'
ok: [dgx1] => 
  msg: 'Pull quay.io/calico/node:v3.25.1 required is: False'
ok: [dgx2] => 
  msg: 'Pull quay.io/calico/node:v3.25.1 required is: False'
ok: [dgx3] => 
  msg: 'Pull quay.io/calico/node:v3.25.1 required is: False'
ok: [dgx4] => 
  msg: 'Pull quay.io/calico/node:v3.25.1 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: quay.io/calico/cni
ok: [dgx1] => 
  msg: quay.io/calico/cni
ok: [dgx2] => 
  msg: quay.io/calico/cni
ok: [dgx3] => 
  msg: quay.io/calico/cni
ok: [dgx4] => 
  msg: quay.io/calico/cni

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull quay.io/calico/cni:v3.25.1 required is: False'
ok: [dgx1] => 
  msg: 'Pull quay.io/calico/cni:v3.25.1 required is: False'
ok: [dgx2] => 
  msg: 'Pull quay.io/calico/cni:v3.25.1 required is: False'
ok: [dgx3] => 
  msg: 'Pull quay.io/calico/cni:v3.25.1 required is: False'
ok: [dgx4] => 
  msg: 'Pull quay.io/calico/cni:v3.25.1 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: quay.io/calico/pod2daemon-flexvol
ok: [dgx1] => 
  msg: quay.io/calico/pod2daemon-flexvol
ok: [dgx2] => 
  msg: quay.io/calico/pod2daemon-flexvol
ok: [dgx3] => 
  msg: quay.io/calico/pod2daemon-flexvol
ok: [dgx4] => 
  msg: quay.io/calico/pod2daemon-flexvol

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False'
ok: [dgx1] => 
  msg: 'Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False'
ok: [dgx2] => 
  msg: 'Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False'
ok: [dgx3] => 
  msg: 'Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False'
ok: [dgx4] => 
  msg: 'Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: quay.io/calico/kube-controllers
ok: [dgx1] => 
  msg: quay.io/calico/kube-controllers
ok: [dgx2] => 
  msg: quay.io/calico/kube-controllers
ok: [dgx3] => 
  msg: quay.io/calico/kube-controllers
ok: [dgx4] => 
  msg: quay.io/calico/kube-controllers

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull quay.io/calico/kube-controllers:v3.25.1 required is: False'
ok: [dgx1] => 
  msg: 'Pull quay.io/calico/kube-controllers:v3.25.1 required is: False'
ok: [dgx2] => 
  msg: 'Pull quay.io/calico/kube-controllers:v3.25.1 required is: False'
ok: [dgx3] => 
  msg: 'Pull quay.io/calico/kube-controllers:v3.25.1 required is: False'
ok: [dgx4] => 
  msg: 'Pull quay.io/calico/kube-controllers:v3.25.1 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1

TASK [download : extract_file | Unpacking archive] *****************************
ok: [mgmt1]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/pause
ok: [dgx1] => 
  msg: registry.k8s.io/pause
ok: [dgx2] => 
  msg: registry.k8s.io/pause
ok: [dgx3] => 
  msg: registry.k8s.io/pause
ok: [dgx4] => 
  msg: registry.k8s.io/pause

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/pause:3.9 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/pause:3.9 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/pause:3.9 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/pause:3.9 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/pause:3.9 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/coredns/coredns
ok: [dgx1] => 
  msg: registry.k8s.io/coredns/coredns
ok: [dgx2] => 
  msg: registry.k8s.io/coredns/coredns
ok: [dgx3] => 
  msg: registry.k8s.io/coredns/coredns
ok: [dgx4] => 
  msg: registry.k8s.io/coredns/coredns

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/dns/k8s-dns-node-cache
ok: [dgx1] => 
  msg: registry.k8s.io/dns/k8s-dns-node-cache
ok: [dgx2] => 
  msg: registry.k8s.io/dns/k8s-dns-node-cache
ok: [dgx3] => 
  msg: registry.k8s.io/dns/k8s-dns-node-cache
ok: [dgx4] => 
  msg: registry.k8s.io/dns/k8s-dns-node-cache

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.18 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.18 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.18 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.18 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.18 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/cpa/cluster-proportional-autoscaler

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]

TASK [download : prep_download | Set a few facts] ******************************
ok: [mgmt1]

TASK [download : download_file | Starting download of file] ********************
ok: [mgmt1] => 
  msg: https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz

TASK [download : download_file | Set pathname of cached file] ******************
ok: [mgmt1]

TASK [download : download_file | Create dest directory on node] ****************
ok: [mgmt1]

TASK [download : download_file | Create local cache directory] *****************
skipping: [mgmt1]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [mgmt1]

TASK [download : download_file | Validate mirrors] *****************************
ok: [mgmt1 -> mgmt1] => (item=None)
ok: [mgmt1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Download item] ********************************
ok: [mgmt1 -> mgmt1]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [mgmt1]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [mgmt1]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [mgmt1]

TASK [download : download_file | Extract file archives] ************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/extract_file.yml for mgmt1

TASK [download : extract_file | Unpacking archive] *****************************
ok: [mgmt1]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: kubernetesui/dashboard

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull kubernetesui/dashboard:v2.0.3 required is: True'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]

TASK [download : download_container | Download image if required] **************
changed: [mgmt1 -> mgmt1]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: kubernetesui/metrics-scraper

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull kubernetesui/metrics-scraper:v1.0.8 required is: True'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]

TASK [download : download_container | Download image if required] **************
changed: [mgmt1 -> mgmt1]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/kube-apiserver
ok: [dgx1] => 
  msg: registry.k8s.io/kube-apiserver
ok: [dgx2] => 
  msg: registry.k8s.io/kube-apiserver
ok: [dgx3] => 
  msg: registry.k8s.io/kube-apiserver
ok: [dgx4] => 
  msg: registry.k8s.io/kube-apiserver

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/kube-apiserver:v1.26.5 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/kube-apiserver:v1.26.5 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/kube-apiserver:v1.26.5 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/kube-apiserver:v1.26.5 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/kube-apiserver:v1.26.5 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/kube-controller-manager
ok: [dgx1] => 
  msg: registry.k8s.io/kube-controller-manager
ok: [dgx2] => 
  msg: registry.k8s.io/kube-controller-manager
ok: [dgx3] => 
  msg: registry.k8s.io/kube-controller-manager
ok: [dgx4] => 
  msg: registry.k8s.io/kube-controller-manager

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/kube-controller-manager:v1.26.5 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/kube-controller-manager:v1.26.5 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/kube-controller-manager:v1.26.5 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/kube-controller-manager:v1.26.5 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/kube-controller-manager:v1.26.5 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/kube-scheduler
ok: [dgx1] => 
  msg: registry.k8s.io/kube-scheduler
ok: [dgx2] => 
  msg: registry.k8s.io/kube-scheduler
ok: [dgx3] => 
  msg: registry.k8s.io/kube-scheduler
ok: [dgx4] => 
  msg: registry.k8s.io/kube-scheduler

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/kube-scheduler:v1.26.5 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/kube-scheduler:v1.26.5 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/kube-scheduler:v1.26.5 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/kube-scheduler:v1.26.5 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/kube-scheduler:v1.26.5 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [mgmt1] => 
  msg: registry.k8s.io/kube-proxy
ok: [dgx1] => 
  msg: registry.k8s.io/kube-proxy
ok: [dgx2] => 
  msg: registry.k8s.io/kube-proxy
ok: [dgx3] => 
  msg: registry.k8s.io/kube-proxy
ok: [dgx4] => 
  msg: registry.k8s.io/kube-proxy

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for mgmt1, dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [mgmt1] => 
  msg: 'Pull registry.k8s.io/kube-proxy:v1.26.5 required is: False'
ok: [dgx1] => 
  msg: 'Pull registry.k8s.io/kube-proxy:v1.26.5 required is: False'
ok: [dgx2] => 
  msg: 'Pull registry.k8s.io/kube-proxy:v1.26.5 required is: False'
ok: [dgx3] => 
  msg: 'Pull registry.k8s.io/kube-proxy:v1.26.5 required is: False'
ok: [dgx4] => 
  msg: 'Pull registry.k8s.io/kube-proxy:v1.26.5 required is: False'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [mgmt1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set default values for flag variables] ************************
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dgx1] => 
  msg: docker.io/library/nginx
ok: [dgx2] => 
  msg: docker.io/library/nginx
ok: [dgx3] => 
  msg: docker.io/library/nginx
ok: [dgx4] => 
  msg: docker.io/library/nginx

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd] *******************
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio] *************************
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Prepare container download] **************
included: /home/aioadmin/deepops/submodules/kubespray/roles/download/tasks/check_pull_required.yml for dgx1, dgx2, dgx3, dgx4

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : debug] ********************************************************
ok: [dgx1] => 
  msg: 'Pull docker.io/library/nginx:1.23.2-alpine required is: True'
ok: [dgx2] => 
  msg: 'Pull docker.io/library/nginx:1.23.2-alpine required is: True'
ok: [dgx3] => 
  msg: 'Pull docker.io/library/nginx:1.23.2-alpine required is: True'
ok: [dgx4] => 
  msg: 'Pull docker.io/library/nginx:1.23.2-alpine required is: True'

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Download image if required] **************
changed: [dgx1 -> dgx1]
changed: [dgx3 -> dgx3]
changed: [dgx2 -> dgx2]
changed: [dgx4 -> dgx4]

TASK [download : download_container | Save and compress image] *****************
skipping: [dgx1]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download_container | Remove container image from cache] *******
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

PLAY [etcd:kube_control_plane] *************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]

TASK [adduser : User | Create User Group] **************************************
ok: [mgmt1]

TASK [adduser : User | Create User] ********************************************
ok: [mgmt1]

TASK [adduser : User | Create User Group] **************************************
ok: [mgmt1]

TASK [adduser : User | Create User] ********************************************
ok: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/check_certs.yml for mgmt1

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***
ok: [mgmt1 -> mgmt1]

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [mgmt1]

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ***
ok: [mgmt1] => (item=ca.pem)
ok: [mgmt1] => (item=member-mgmt1.pem)
ok: [mgmt1] => (item=member-mgmt1-key.pem)
ok: [mgmt1] => (item=admin-mgmt1.pem)
ok: [mgmt1] => (item=admin-mgmt1-key.pem)

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ***
ok: [mgmt1] => (item=ca.pem)
ok: [mgmt1] => (item=node-mgmt1.pem)
ok: [mgmt1] => (item=node-mgmt1-key.pem)

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node(1/2)] ***
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1.pem)
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1-key.pem)
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1.pem)
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1-key.pem)
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1.pem)
ok: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1-key.pem)

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node(2/2)] ***
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx2.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx2-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx3.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx3-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx4.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx4-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1-key.pem) 

TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] ***
ok: [mgmt1]

TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] ***
ok: [mgmt1]

TASK [etcd : Check_certs | Set 'etcd_member_requires_sync' to true if ca or member/admin cert and key don't exist on etcd member or checksum doesn't match] ***
skipping: [mgmt1]

TASK [etcd : Check_certs | Set 'kubernetes_host_requires_sync' to true if ca or node cert and key don't exist on kubernetes host or checksum doesn't match] ***
skipping: [mgmt1]

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***************************
ok: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/gen_certs_script.yml for mgmt1

TASK [etcd : Gen_certs | create etcd cert dir] *********************************
ok: [mgmt1]

TASK [etcd : Gen_certs | create etcd script dir (on mgmt1)] ********************
ok: [mgmt1]

TASK [etcd : Gen_certs | write openssl config] *********************************
ok: [mgmt1 -> mgmt1]

TASK [etcd : Gen_certs | copy certs generation script] *************************
ok: [mgmt1]

TASK [etcd : Gen_certs | run cert generation script for etcd and kube control plane nodes] ***
changed: [mgmt1 -> mgmt1]

TASK [etcd : Gen_certs | run cert generation script for all clients] ***********
skipping: [mgmt1]

TASK [etcd : Gen_certs | Gather etcd member/admin and kube_control_plane client certs from first etcd node] ***
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1-key.pem) 

TASK [etcd : Gen_certs | Write etcd member/admin and kube_control_plane client certs to other etcd nodes] ***
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/admin-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/member-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1-key.pem) 

TASK [etcd : Gen_certs | Gather node certs from first etcd node] ***************
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx2.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx2-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx3.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx3-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx4.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx4-key.pem) 

TASK [etcd : Gen_certs | Write node certs to other etcd nodes] *****************
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-mgmt1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx1.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx1-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx2.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx2-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx3.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx3-key.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx4.pem) 
skipping: [mgmt1] => (item=/etc/ssl/etcd/ssl/node-dgx4-key.pem) 

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]

TASK [etcd : Gen_certs | check certificate permissions] ************************
changed: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/upd_ca_trust.yml for mgmt1

TASK [etcd : Gen_certs | target ca-certificate store file] *********************
ok: [mgmt1]

TASK [etcd : Gen_certs | add CA to trusted CA dir] *****************************
ok: [mgmt1]

TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Flatcar)] ***
skipping: [mgmt1]

TASK [etcd : Gen_certs | update ca-certificates (RedHat)] **********************
skipping: [mgmt1]

TASK [etcd : Gen_certs | update ca-certificates (ClearLinux)] ******************
skipping: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]

TASK [etcd : Gen_certs | Get etcd certificate serials] *************************
skipping: [mgmt1]

TASK [etcd : Set etcd_client_cert_serial] **************************************
skipping: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/install_host.yml for mgmt1

TASK [etcd : Get currently-deployed etcd version] ******************************
changed: [mgmt1]

TASK [etcd : Restart etcd if necessary] ****************************************
skipping: [mgmt1]

TASK [etcd : Restart etcd-events if necessary] *********************************
skipping: [mgmt1]

TASK [etcd : install | Copy etcd and etcdctl binary from download dir] *********
ok: [mgmt1] => (item=etcd)
ok: [mgmt1] => (item=etcdctl)

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/configure.yml for mgmt1

TASK [etcd : Configure | Check if etcd cluster is healthy] *********************
ok: [mgmt1]

TASK [etcd : Configure | Check if etcd-events cluster is healthy] **************
skipping: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/refresh_config.yml for mgmt1

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [mgmt1]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [mgmt1]

TASK [etcd : Configure | Copy etcd.service systemd file] ***********************
ok: [mgmt1]

TASK [etcd : Configure | Copy etcd-events.service systemd file] ****************
skipping: [mgmt1]

TASK [etcd : Configure | reload systemd] ***************************************
ok: [mgmt1]

TASK [etcd : Configure | Ensure etcd is running] *******************************
ok: [mgmt1]

TASK [etcd : Configure | Ensure etcd-events is running] ************************
skipping: [mgmt1]

TASK [etcd : Configure | Wait for etcd cluster to be healthy] ******************
ok: [mgmt1]

TASK [etcd : Configure | Wait for etcd-events cluster to be healthy] ***********
skipping: [mgmt1]

TASK [etcd : Configure | Check if member is in etcd cluster] *******************
ok: [mgmt1]

TASK [etcd : Configure | Check if member is in etcd-events cluster] ************
skipping: [mgmt1]

TASK [etcd : Configure | Join member(s) to etcd cluster one at a time] *********
skipping: [mgmt1] => (item=mgmt1) 

TASK [etcd : Configure | Join member(s) to etcd-events cluster one at a time] ***
skipping: [mgmt1] => (item=mgmt1) 

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/refresh_config.yml for mgmt1

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [mgmt1]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [mgmt1]

TASK [etcd : Restart etcd if certs changed] ************************************
skipping: [mgmt1]

TASK [etcd : Restart etcd-events if certs changed] *****************************
skipping: [mgmt1]

TASK [etcd : include_tasks] ****************************************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/etcd/tasks/refresh_config.yml for mgmt1

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [mgmt1]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [mgmt1]

RUNNING HANDLER [etcd : set etcd_secret_changed] *******************************
ok: [mgmt1]

PLAY [k8s_cluster] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download | Download files / images] ***************************
skipping: [dgx1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx2] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx2] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx3] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx4] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [adduser : User | Create User Group] **************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [adduser : User | Create User] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [adduser : User | Create User Group] **************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [adduser : User | Create User] ********************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : Gen_certs | Get etcd certificate serials] *************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : Set etcd_client_cert_serial] **************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : Restart etcd if certs changed] ************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : Restart etcd-events if certs changed] *****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [etcd : include_tasks] ****************************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

PLAY [k8s_cluster] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx2] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx3] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx3] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx2] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx3] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx4] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : look up docker cgroup driver] **************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for docker] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : look up crio cgroup driver] ****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for crio] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for containerd] ***
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : set kubelet_cgroup_driver] *****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : set kubelet_cgroups options when cgroupfs is used] *****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : set kubelet_config_extra_args options when cgroupfs is used] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : os specific vars] **************************************
ok: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [dgx1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [dgx2] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [dgx3] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [dgx4] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)

TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Pre-upgrade | copy /var/lib/cni from kubelet] **********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Pre-upgrade | ensure kubelet container service is stopped if using host deployment] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Pre-upgrade | ensure kubelet container is removed if using host deployment] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Ensure /var/lib/cni exists] ****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : install | Copy kubeadm binary from download dir] *******
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : install | Copy kubelet binary from download dir] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : kube-vip  | Check cluster settings for kube-vip] *******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : kube-vip | Write static pod] ***************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : haproxy | Cleanup potentially deployed haproxy] ********
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : nginx-proxy | Make nginx directory] ********************
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : nginx-proxy | Write nginx-proxy configuration] *********
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : nginx-proxy | Get checksum from config] ****************
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : nginx-proxy | Write static pod] ************************
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : haproxy | Cleanup potentially deployed nginx-proxy] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : haproxy | Make haproxy directory] **********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : haproxy | Write haproxy configuration] *****************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : haproxy | Get checksum from config] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : haproxy | Write static pod] ****************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Ensure nodePort range is reserved] *********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Verify if br_netfilter module exists] ******************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Verify br_netfilter module path exists] ****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Enable br_netfilter module] ****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Persist br_netfilter module] ***************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] ***********
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Enable bridge-nf-call tables] **************************
ok: [mgmt1] => (item=net.bridge.bridge-nf-call-iptables)
ok: [dgx1] => (item=net.bridge.bridge-nf-call-iptables)
ok: [mgmt1] => (item=net.bridge.bridge-nf-call-arptables)
ok: [dgx2] => (item=net.bridge.bridge-nf-call-iptables)
ok: [dgx1] => (item=net.bridge.bridge-nf-call-arptables)
ok: [dgx3] => (item=net.bridge.bridge-nf-call-iptables)
ok: [dgx4] => (item=net.bridge.bridge-nf-call-iptables)
ok: [dgx2] => (item=net.bridge.bridge-nf-call-arptables)
ok: [mgmt1] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [dgx3] => (item=net.bridge.bridge-nf-call-arptables)
ok: [dgx1] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [dgx4] => (item=net.bridge.bridge-nf-call-arptables)
ok: [dgx2] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [dgx3] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [dgx4] => (item=net.bridge.bridge-nf-call-ip6tables)

TASK [kubernetes/node : Modprobe Kernel Module for IPVS] ***********************
ok: [mgmt1] => (item=ip_vs)
ok: [dgx1] => (item=ip_vs)
ok: [mgmt1] => (item=ip_vs_rr)
ok: [dgx2] => (item=ip_vs)
ok: [dgx3] => (item=ip_vs)
ok: [dgx1] => (item=ip_vs_rr)
ok: [dgx4] => (item=ip_vs)
ok: [mgmt1] => (item=ip_vs_wrr)
ok: [dgx2] => (item=ip_vs_rr)
ok: [dgx3] => (item=ip_vs_rr)
ok: [dgx1] => (item=ip_vs_wrr)
ok: [dgx4] => (item=ip_vs_rr)
ok: [mgmt1] => (item=ip_vs_sh)
ok: [dgx2] => (item=ip_vs_wrr)
ok: [dgx3] => (item=ip_vs_wrr)
ok: [dgx1] => (item=ip_vs_sh)
ok: [dgx2] => (item=ip_vs_sh)
ok: [dgx4] => (item=ip_vs_wrr)
ok: [dgx3] => (item=ip_vs_sh)
ok: [dgx4] => (item=ip_vs_sh)

TASK [kubernetes/node : Modprobe nf_conntrack_ipv4] ****************************
fatal: [mgmt1]: FAILED! => changed=false 
  msg: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-166-generic
  name: nf_conntrack_ipv4
  params: ''
  rc: 1
  state: present
  stderr: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-166-generic
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
...ignoring
fatal: [dgx1]: FAILED! => changed=false 
  msg: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  name: nf_conntrack_ipv4
  params: ''
  rc: 1
  state: present
  stderr: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
...ignoring
fatal: [dgx2]: FAILED! => changed=false 
  msg: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  name: nf_conntrack_ipv4
  params: ''
  rc: 1
  state: present
  stderr: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
...ignoring
fatal: [dgx3]: FAILED! => changed=false 
  msg: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  name: nf_conntrack_ipv4
  params: ''
  rc: 1
  state: present
  stderr: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
...ignoring
fatal: [dgx4]: FAILED! => changed=false 
  msg: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  name: nf_conntrack_ipv4
  params: ''
  rc: 1
  state: present
  stderr: |-
    modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-165-generic
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
...ignoring

TASK [kubernetes/node : Persist ip_vs modules] *********************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : include_tasks] *****************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Test if openstack_cacert is a base64 string] ***********
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Write cacert file] *************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Write cloud-config] ************************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/node : Set kubelet api version to v1beta1] ********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] *******
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Write kubelet config file] *****************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : Write kubelet systemd init file] ***********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/node : flush_handlers and reload-systemd] *********************

TASK [kubernetes/node : Enable kubelet] ****************************************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

PLAY [kube_control_plane] ******************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]

TASK [kubernetes/tokens : Check_tokens | check if the tokens have already been generated on first master] ***
skipping: [mgmt1]

TASK [kubernetes/tokens : Check_tokens | Set default value for 'sync_tokens' and 'gen_tokens' to false] ***
skipping: [mgmt1]

TASK [kubernetes/tokens : Check_tokens | Set 'sync_tokens' and 'gen_tokens' to true] ***
skipping: [mgmt1]

TASK [kubernetes/tokens : Check tokens | check if a cert already exists] *******
skipping: [mgmt1]

TASK [kubernetes/tokens : Check_tokens | Set 'sync_tokens' to true] ************
skipping: [mgmt1]

TASK [kubernetes/tokens : Make sure the tokens directory exits] ****************
skipping: [mgmt1]

TASK [kubernetes/tokens : Gen_tokens | copy tokens generation script] **********
skipping: [mgmt1]

TASK [kubernetes/tokens : Gen_tokens | generate tokens for master components] ***
skipping: [mgmt1] => (item=['system:kubectl', 'mgmt1']) 

TASK [kubernetes/tokens : Gen_tokens | generate tokens for node components] ****
skipping: [mgmt1] => (item=['system:kubelet', 'dgx1']) 
skipping: [mgmt1] => (item=['system:kubelet', 'dgx2']) 
skipping: [mgmt1] => (item=['system:kubelet', 'dgx3']) 
skipping: [mgmt1] => (item=['system:kubelet', 'dgx4']) 

TASK [kubernetes/tokens : Gen_tokens | Get list of tokens from first master] ***
skipping: [mgmt1]

TASK [kubernetes/tokens : Gen_tokens | Gather tokens] **************************
skipping: [mgmt1]

TASK [kubernetes/tokens : Gen_tokens | Copy tokens on masters] *****************
skipping: [mgmt1]

TASK [adduser : User | Create User Group] **************************************
skipping: [mgmt1]

TASK [adduser : User | Create User] ********************************************
skipping: [mgmt1]

TASK [kubernetes/control-plane : Pre-upgrade | Delete master manifests if etcd secrets changed] ***
ok: [mgmt1] => (item=kube-apiserver)
ok: [mgmt1] => (item=kube-controller-manager)
ok: [mgmt1] => (item=kube-scheduler)

TASK [kubernetes/control-plane : Pre-upgrade | Delete master containers forcefully] ***
skipping: [mgmt1] => (item=kube-apiserver) 
skipping: [mgmt1] => (item=kube-controller-manager) 
skipping: [mgmt1] => (item=kube-scheduler) 

TASK [kubernetes/control-plane : Create webhook token auth config] *************
skipping: [mgmt1]

TASK [kubernetes/control-plane : Create webhook authorization config] **********
skipping: [mgmt1]

TASK [kubernetes/control-plane : Create kube-scheduler config] *****************
ok: [mgmt1]

TASK [kubernetes/control-plane : Check if secret for encrypting data at rest already exist] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Slurp secrets_encryption file if it exists] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Base 64 Decode slurped secrets_encryption.yaml file] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Extract secret value from secrets_encryption.yaml] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Set kube_encrypt_token across master nodes] ***
skipping: [mgmt1] => (item=mgmt1) 

TASK [kubernetes/control-plane : Write secrets for encrypting secret data at rest] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ***
ok: [mgmt1]

TASK [kubernetes/control-plane : Install kubectl bash completion] **************
changed: [mgmt1]

TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] ***
ok: [mgmt1]

TASK [kubernetes/control-plane : Disable SecurityContextDeny admission-controller and enable PodSecurityPolicy] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ***
ok: [mgmt1]

TASK [kubernetes/control-plane : Set fact joined_control_panes] ****************
ok: [mgmt1 -> item] => (item=mgmt1)

TASK [kubernetes/control-plane : Set fact first_kube_control_plane] ************
ok: [mgmt1]

TASK [kubernetes/control-plane : Install OIDC certificate] *********************
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Check if kubeadm has already run] ***
ok: [mgmt1]

TASK [kubernetes/control-plane : Backup old certs and keys] ********************
ok: [mgmt1] => (item=apiserver.crt)
ok: [mgmt1] => (item=apiserver.key)
ok: [mgmt1] => (item=apiserver-kubelet-client.crt)
ok: [mgmt1] => (item=apiserver-kubelet-client.key)
ok: [mgmt1] => (item=front-proxy-client.crt)
ok: [mgmt1] => (item=front-proxy-client.key)

TASK [kubernetes/control-plane : Backup old confs] *****************************
ok: [mgmt1] => (item=admin.conf)
ok: [mgmt1] => (item=controller-manager.conf)
ok: [mgmt1] => (item=kubelet.conf)
ok: [mgmt1] => (item=scheduler.conf)

TASK [kubernetes/control-plane : kubeadm | aggregate all SANs] *****************
ok: [mgmt1]

TASK [kubernetes/control-plane : Create audit-policy directory] ****************
skipping: [mgmt1]

TASK [kubernetes/control-plane : Write api audit policy yaml] ******************
skipping: [mgmt1]

TASK [kubernetes/control-plane : Write api audit webhook config yaml] **********
skipping: [mgmt1]

TASK [kubernetes/control-plane : set kubeadm_config_api_fqdn define] ***********
skipping: [mgmt1]

TASK [kubernetes/control-plane : Set kubeadm api version to v1beta3] ***********
ok: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Create kubeadm config] **************
ok: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Create directory to store admission control configurations] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Push admission control config file] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Push admission control config files] ***

TASK [kubernetes/control-plane : kubeadm | Check apiserver.crt SAN IPs] ********
ok: [mgmt1] => (item=10.233.0.1)
ok: [mgmt1] => (item=127.0.0.1)
ok: [mgmt1] => (item=10.0.241.12)

TASK [kubernetes/control-plane : kubeadm | Check apiserver.crt SAN hosts] ******
ok: [mgmt1] => (item=kubernetes)
ok: [mgmt1] => (item=kubernetes.default)
ok: [mgmt1] => (item=kubernetes.default.svc)
ok: [mgmt1] => (item=kubernetes.default.svc.cluster.local)
ok: [mgmt1] => (item=localhost)
ok: [mgmt1] => (item=mgmt1)
ok: [mgmt1] => (item=lb-apiserver.kubernetes.local)

TASK [kubernetes/control-plane : kubeadm | regenerate apiserver cert 1/2] ******
skipping: [mgmt1] => (item=apiserver.crt) 
skipping: [mgmt1] => (item=apiserver.key) 

TASK [kubernetes/control-plane : kubeadm | regenerate apiserver cert 2/2] ******
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Create directory to store kubeadm patches] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Copy kubeadm patches from inventory files] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Initialize first master] ************
skipping: [mgmt1]

TASK [kubernetes/control-plane : set kubeadm certificate key] ******************

TASK [kubernetes/control-plane : Create hardcoded kubeadm token for joining nodes with 24h expiration (if defined)] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : Create kubeadm token for joining nodes with 24h expiration (default)] ***
ok: [mgmt1 -> mgmt1]

TASK [kubernetes/control-plane : Set kubeadm_token] ****************************
ok: [mgmt1]

TASK [kubernetes/control-plane : PodSecurityPolicy | install PodSecurityPolicy] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Join other masters] *****************
included: /home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-secondary.yml for mgmt1

TASK [kubernetes/control-plane : Set kubeadm_discovery_address] ****************
ok: [mgmt1]

TASK [kubernetes/control-plane : Upload certificates so they are fresh and not expired] ***
changed: [mgmt1]

TASK [kubernetes/control-plane : Parse certificate key if not set] *************
ok: [mgmt1]

TASK [kubernetes/control-plane : Create kubeadm ControlPlane config] ***********
skipping: [mgmt1]

TASK [kubernetes/control-plane : Wait for k8s apiserver] ***********************
ok: [mgmt1]

TASK [kubernetes/control-plane : check already run] ****************************
ok: [mgmt1] => 
  msg: true

TASK [kubernetes/control-plane : Reset cert directory] *************************
skipping: [mgmt1]

TASK [kubernetes/control-plane : Joining control plane node to the cluster.] ***
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | upgrade kubernetes cluster] *********
skipping: [mgmt1]

TASK [kubernetes/control-plane : kubeadm | Remove taint for master with node role] ***
skipping: [mgmt1] => (item=node-role.kubernetes.io/master:NoSchedule-) 
skipping: [mgmt1] => (item=node-role.kubernetes.io/control-plane:NoSchedule-) 

TASK [kubernetes/control-plane : Include kubeadm etcd extra tasks] *************
skipping: [mgmt1]

TASK [kubernetes/control-plane : Include kubeadm secondary server apiserver fixes] ***
included: /home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-fix-apiserver.yml for mgmt1

TASK [kubernetes/control-plane : Update server field in component kubeconfigs] ***
ok: [mgmt1] => (item=admin.conf)
ok: [mgmt1] => (item=controller-manager.conf)
ok: [mgmt1] => (item=kubelet.conf)
ok: [mgmt1] => (item=scheduler.conf)

TASK [kubernetes/control-plane : Update etcd-servers for apiserver] ************
ok: [mgmt1]

TASK [kubernetes/control-plane : Include kubelet client cert rotation fixes] ***
included: /home/aioadmin/deepops/submodules/kubespray/roles/kubernetes/control-plane/tasks/kubelet-fix-client-cert-rotation.yml for mgmt1

TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 1/2] *******
ok: [mgmt1]

TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 2/2] *******
ok: [mgmt1]

TASK [kubernetes/control-plane : Install script to renew K8S control plane certificates] ***
ok: [mgmt1]

TASK [kubernetes/control-plane : Renew K8S control plane certificates monthly 1/2] ***
skipping: [mgmt1] => (item=k8s-certs-renew.service) 
skipping: [mgmt1] => (item=k8s-certs-renew.timer) 

TASK [kubernetes/control-plane : Renew K8S control plane certificates monthly 2/2] ***
skipping: [mgmt1]

TASK [kubernetes/client : Set external kube-apiserver endpoint] ****************
ok: [mgmt1]

TASK [kubernetes/client : Create kube config dir for current/ansible become user] ***
ok: [mgmt1]

TASK [kubernetes/client : Copy admin kubeconfig to current/ansible become user home] ***
ok: [mgmt1]

TASK [kubernetes/client : Create kube artifacts dir] ***************************
ok: [mgmt1 -> localhost]

TASK [kubernetes/client : Wait for k8s apiserver] ******************************
ok: [mgmt1]

TASK [kubernetes/client : Get admin kubeconfig from remote host] ***************
ok: [mgmt1]

TASK [kubernetes/client : Convert kubeconfig to YAML] **************************
ok: [mgmt1]

TASK [kubernetes/client : Override username in kubeconfig] *********************
ok: [mgmt1]

TASK [kubernetes/client : Write admin kubeconfig on ansible host] **************
ok: [mgmt1 -> localhost]

TASK [kubernetes/client : Copy kubectl binary to ansible host] *****************
skipping: [mgmt1]

TASK [kubernetes/client : create helper script kubectl.sh on ansible host] *****
skipping: [mgmt1]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Wait for kube-apiserver] ***
ok: [mgmt1]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding to admit nodes] ***
ok: [mgmt1]

TASK [kubernetes-apps/cluster_roles : Apply workaround to allow all nodes with cert O=system:nodes to register] ***
skipping: [mgmt1]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Remove old webhook ClusterRole] ***
ok: [mgmt1]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Remove old webhook ClusterRoleBinding] ***
ok: [mgmt1]

TASK [kubernetes-apps/cluster_roles : include_tasks] ***************************
skipping: [mgmt1]

TASK [kubernetes-apps/cluster_roles : PriorityClass | Copy k8s-cluster-critical-pc.yml file] ***
ok: [mgmt1]

TASK [kubernetes-apps/cluster_roles : PriorityClass | Create k8s-cluster-critical] ***
ok: [mgmt1]

PLAY [k8s_cluster] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx2] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx2] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx2] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx3] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dgx3] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx4] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx3] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx3] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dgx4] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [dgx4] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx2] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx3] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml
ok: [dgx4] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/kubeadm : Set kubeadm_discovery_address] **********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/kubeadm : Check if kubelet.conf exists] ***********************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/kubeadm : Check if kubeadm CA cert is accessible] *************
ok: [mgmt1 -> mgmt1]

TASK [kubernetes/kubeadm : Calculate kubeadm CA cert hash] *********************
ok: [mgmt1 -> mgmt1]

TASK [kubernetes/kubeadm : Create kubeadm token for joining nodes with 24h expiration (default)] ***
skipping: [mgmt1]
ok: [dgx1 -> mgmt1]
ok: [dgx2 -> mgmt1]
ok: [dgx3 -> mgmt1]
ok: [dgx4 -> mgmt1]

TASK [kubernetes/kubeadm : Set kubeadm_token to generated token] ***************
skipping: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/kubeadm : Set kubeadm api version to v1beta3] *****************
ok: [mgmt1]
ok: [dgx1]
ok: [dgx2]
ok: [dgx3]
ok: [dgx4]

TASK [kubernetes/kubeadm : Create kubeadm client config] ***********************
skipping: [mgmt1]
changed: [dgx1]
changed: [dgx2]
changed: [dgx3]
changed: [dgx4]

TASK [kubernetes/kubeadm : kubeadm | Create directory to store kubeadm patches] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/kubeadm : kubeadm | Copy kubeadm patches from inventory files] ***
skipping: [mgmt1]
skipping: [dgx1]
skipping: [dgx2]
skipping: [dgx3]
skipping: [dgx4]

TASK [kubernetes/kubeadm : Join to cluster] ************************************
skipping: [mgmt1]
fatal: [dgx1]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests
  - --skip-phases=
  delta: '0:01:00.129531'
  end: '2023-11-02 22:43:17.929797'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:42:17.800266'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>
fatal: [dgx2]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests
  - --skip-phases=
  delta: '0:01:00.122224'
  end: '2023-11-02 22:43:57.987905'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:42:57.865681'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>
fatal: [dgx3]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests
  - --skip-phases=
  delta: '0:01:00.120382'
  end: '2023-11-02 22:43:36.819302'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:42:36.698920'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>
fatal: [dgx4]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests
  - --skip-phases=
  delta: '0:01:00.119353'
  end: '2023-11-02 22:44:08.858659'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:43:08.739306'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>

TASK [kubernetes/kubeadm : Join to cluster with ignores] ***********************
fatal: [dgx1]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=all
  - --skip-phases=
  delta: '0:01:00.125996'
  end: '2023-11-02 22:44:18.792290'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:43:18.666294'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>
fatal: [dgx2]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=all
  - --skip-phases=
  delta: '0:01:00.125998'
  end: '2023-11-02 22:44:58.880216'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:43:58.754218'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>
fatal: [dgx3]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=all
  - --skip-phases=
  delta: '0:01:00.122543'
  end: '2023-11-02 22:44:37.758206'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:43:37.635663'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>
fatal: [dgx4]: FAILED! => changed=false 
  cmd:
  - timeout
  - -k
  - 120s
  - 120s
  - /usr/local/bin/kubeadm
  - join
  - --config
  - /etc/kubernetes/kubeadm-client.conf
  - --ignore-preflight-errors=all
  - --skip-phases=
  delta: '0:01:00.119125'
  end: '2023-11-02 22:45:09.849317'
  msg: non-zero return code
  rc: 1
  start: '2023-11-02 22:44:09.730192'
  stderr: |-
    error execution phase preflight: couldn't validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    To see the stack trace of this error execute with --v=5 or higher
  stderr_lines: <omitted>
  stdout: '[preflight] Running pre-flight checks'
  stdout_lines: <omitted>

TASK [kubernetes/kubeadm : Display kubeadm join stderr if any] *****************
skipping: [mgmt1]
ok: [dgx1] => 
  msg: |-
    Joined with warnings
    ['error execution phase preflight: couldn\'t validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)', 'To see the stack trace of this error execute with --v=5 or higher']
ok: [dgx2] => 
  msg: |-
    Joined with warnings
    ['error execution phase preflight: couldn\'t validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)', 'To see the stack trace of this error execute with --v=5 or higher']
ok: [dgx3] => 
  msg: |-
    Joined with warnings
    ['error execution phase preflight: couldn\'t validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)', 'To see the stack trace of this error execute with --v=5 or higher']
ok: [dgx4] => 
  msg: |-
    Joined with warnings
    ['error execution phase preflight: couldn\'t validate the identity of the API Server: Get "https://10.0.241.12:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)', 'To see the stack trace of this error execute with --v=5 or higher']

TASK [kubernetes/kubeadm : Update server field in kubelet kubeconfig] **********
skipping: [mgmt1]

TASK [kubernetes/kubeadm : Update server field in kube-proxy kubeconfig] *******
changed: [mgmt1 -> mgmt1]

TASK [kubernetes/kubeadm : Set ca.crt file permission] *************************
ok: [mgmt1]

TASK [kubernetes/kubeadm : Restart all kube-proxy pods to ensure that they load the new configmap] ***
changed: [mgmt1 -> mgmt1]

TASK [kubernetes/kubeadm : Extract etcd certs from control plane if using etcd kubeadm mode] ***
skipping: [mgmt1]

TASK [kubernetes/node-label : Kubernetes Apps | Wait for kube-apiserver] *******
ok: [mgmt1]

TASK [kubernetes/node-label : Set role node label to empty list] ***************
ok: [mgmt1]

TASK [kubernetes/node-label : Node label for nvidia GPU nodes] *****************
skipping: [mgmt1]

TASK [kubernetes/node-label : Set inventory node label to empty list] **********
ok: [mgmt1]

TASK [kubernetes/node-label : Populate inventory node label] *******************

TASK [kubernetes/node-label : debug] *******************************************
ok: [mgmt1] => 
  role_node_labels: []

TASK [kubernetes/node-label : debug] *******************************************
ok: [mgmt1] => 
  inventory_node_labels: []

TASK [kubernetes/node-label : Set label to node] *******************************

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
changed: [mgmt1]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
changed: [mgmt1]

TASK [network_plugin/cilium : Cilium | Check Cilium encryption `cilium_ipsec_key` for ipsec] ***
skipping: [mgmt1]

TASK [network_plugin/cilium : Stop if `cilium_ipsec_enabled` is defined and `cilium_encryption_type` is not `ipsec`] ***
skipping: [mgmt1]

TASK [network_plugin/cilium : Stop if kernel version is too low for Cilium Wireguard encryption] ***
skipping: [mgmt1]

TASK [network_plugin/cilium : Stop if bad Cilium identity allocation mode] *****
skipping: [mgmt1]

TASK [network_plugin/cilium : Stop if bad Cilium Cluster ID] *******************
skipping: [mgmt1]

TASK [network_plugin/cilium : Stop if bad encryption type] *********************
skipping: [mgmt1]

TASK [network_plugin/cilium : Stop if cilium_version is < v1.10.0] *************
skipping: [mgmt1]

TASK [network_plugin/cilium : Set `cilium_encryption_type` to "ipsec" and  if `cilium_ipsec_enabled` is true] ***
skipping: [mgmt1]

TASK [network_plugin/cilium : include_tasks] ***********************************
skipping: [mgmt1]

TASK [network_plugin/cilium : include_tasks] ***********************************
skipping: [mgmt1]

TASK [network_plugin/calico : Slurp CNI config] ********************************
ok: [mgmt1]

TASK [network_plugin/calico : Set fact calico_cni_config from slurped CNI config] ***
ok: [mgmt1]

TASK [network_plugin/calico : Set fact calico_datastore to etcd if needed] *****
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Get kubelet hostname] *******************
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Gather os specific variables] ***********
ok: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml)

TASK [network_plugin/calico : Calico | Add wireguard yum repo] *****************
skipping: [mgmt1]

TASK [network_plugin/calico : include_tasks] ***********************************
included: /home/aioadmin/deepops/submodules/kubespray/roles/network_plugin/calico/tasks/install.yml for mgmt1

TASK [network_plugin/calico : Calico | Install Wireguard packages] *************
skipping: [mgmt1] => (item=wireguard) 

TASK [network_plugin/calico : Calico | Copy calicoctl binary from download dir] ***
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Write Calico cni config] ****************
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Create calico certs directory] **********
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Link etcd certificates for calico-node] ***
skipping: [mgmt1] => (item={'s': 'ca.pem', 'd': 'ca_cert.crt'}) 
skipping: [mgmt1] => (item={'s': 'node-mgmt1.pem', 'd': 'cert.crt'}) 
skipping: [mgmt1] => (item={'s': 'node-mgmt1-key.pem', 'd': 'key.pem'}) 

TASK [network_plugin/calico : Calico | Generate typha certs] *******************
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Generate apiserver certs] ***************
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Install calicoctl wrapper script] *******
ok: [mgmt1]

TASK [network_plugin/calico : Calico | wait for etcd] **************************
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Check if calico network pool has already been configured] ***
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Ensure that calico_pool_cidr is within kube_pods_subnet when defined] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Check if calico IPv6 network pool has already been configured] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Ensure that calico_pool_cidr_ipv6 is within kube_pods_subnet_ipv6 when defined] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Check if extra directory is needed] *****
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Set kdd path when calico < v3.22.3] *****
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Set kdd path when calico > v3.22.2] *****
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Create calico manifests for kdd] ********
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Create Calico Kubernetes datastore resources] ***
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Get existing FelixConfiguration] ********
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Set kubespray FelixConfiguration] *******
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Process FelixConfiguration] *************
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Configure calico FelixConfiguration] ****
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Get existing calico network pool] *******
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Set kubespray calico network pool] ******
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Process calico network pool] ************
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Configure calico network pool] **********
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Get existing calico ipv6 network pool] ***
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Set kubespray calico network pool] ******
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Process calico ipv6 network pool] *******
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Configure calico ipv6 network pool] *****
skipping: [mgmt1]

TASK [network_plugin/calico : Populate Service External IPs] *******************

TASK [network_plugin/calico : Populate Service LoadBalancer IPs] ***************

TASK [network_plugin/calico : Determine nodeToNodeMesh needed state] ***********
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Get existing BGP Configuration] *********
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Set kubespray BGP Configuration] ********
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Process BGP Configuration] **************
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Set up BGP Configuration] ***************
ok: [mgmt1]

TASK [network_plugin/calico : Calico | Create calico manifests] ****************
ok: [mgmt1] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'})
ok: [mgmt1] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'})
ok: [mgmt1] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'})
ok: [mgmt1] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'})
ok: [mgmt1] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'})
ok: [mgmt1] => (item={'name': 'kubernetes-services-endpoint', 'file': 'kubernetes-services-endpoint.yml', 'type': 'cm'})

TASK [network_plugin/calico : Calico | Create calico manifests for typha] ******
skipping: [mgmt1] => (item={'name': 'calico', 'file': 'calico-typha.yml', 'type': 'typha'}) 

TASK [network_plugin/calico : Calico | get calico apiserver caBundle] **********
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | set calico apiserver caBundle fact] *****
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Create calico manifests for apiserver] ***
skipping: [mgmt1] => (item={'name': 'calico', 'file': 'calico-apiserver.yml', 'type': 'calico-apiserver'}) 

TASK [network_plugin/calico : Start Calico resources] **************************
ok: [mgmt1] => (item=calico-config.yml)
ok: [mgmt1] => (item=calico-node.yml)
ok: [mgmt1] => (item=calico-node-sa.yml)
ok: [mgmt1] => (item=calico-cr.yml)
ok: [mgmt1] => (item=calico-crb.yml)
ok: [mgmt1] => (item=kubernetes-services-endpoint.yml)
skipping: [mgmt1] => (item=calico-typha.yml) 

TASK [network_plugin/calico : Start Calico apiserver resources] ****************
skipping: [mgmt1] => (item=calico-apiserver.yml) 

TASK [network_plugin/calico : Wait for calico kubeconfig to be created] ********
skipping: [mgmt1]

TASK [network_plugin/calico : Calico | Create Calico ipam manifests] ***********
ok: [mgmt1] => (item={'name': 'calico', 'file': 'calico-ipamconfig.yml', 'type': 'ipam'})

TASK [network_plugin/calico : Calico | Create ipamconfig resources] ************
ok: [mgmt1]

TASK [network_plugin/calico : include_tasks] ***********************************
skipping: [mgmt1]

TASK [network_plugin/calico : include_tasks] ***********************************
skipping: [mgmt1]

TASK [network_plugin/flannel : Flannel | Stop if kernel version is too low for Flannel Wireguard encryption] ***
skipping: [mgmt1]

TASK [network_plugin/flannel : Flannel | Create Flannel manifests] *************
skipping: [mgmt1] => (item={'name': 'flannel', 'file': 'cni-flannel-rbac.yml', 'type': 'sa'}) 
skipping: [mgmt1] => (item={'name': 'kube-flannel', 'file': 'cni-flannel.yml', 'type': 'ds'}) 

TASK [network_plugin/weave : Weave | Create manifest] **************************
skipping: [mgmt1]

TASK [network_plugin/weave : Weave | Fix nodePort for Weave] *******************
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Retrieve Pod Cidr] ********************
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | set node_pod_cidr] ********************
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Retrieve default gateway network interface] ***
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | set node_default_gateway_interface] ***
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on debian] ***
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Install macvlan script on centos] *****
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/network_plugin/macvlan/files/ifdown-local) 
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/network_plugin/macvlan/files/ifdown-macvlan) 
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/network_plugin/macvlan/files/ifup-local) 
skipping: [mgmt1] => (item=/home/aioadmin/deepops/submodules/kubespray/roles/network_plugin/macvlan/files/ifup-macvlan) 

TASK [network_plugin/macvlan : Macvlan | Install post-up script on centos] *****
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on centos] ***
skipping: [mgmt1] => (item={'src': 'centos-network-macvlan.cfg', 'dst': 'ifcfg-mac0'}) 
skipping: [mgmt1] => (item={'src': 'centos-routes-macvlan.cfg', 'dst': 'route-mac0'}) 
skipping: [mgmt1] => (item={'src': 'centos-postup-macvlan.cfg', 'dst': 'post-up-mac0'}) 

TASK [network_plugin/macvlan : Macvlan | Install service nat via gateway on Flatcar Container Linux] ***
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Enable service nat via gateway on Flatcar Container Linux] ***
skipping: [mgmt1] => (item=systemctl daemon-reload) 
skipping: [mgmt1] => (item=systemctl enable enable_nat_ouside.service) 

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on Flatcar Container Linux] ***
skipping: [mgmt1] => (item={'src': 'coreos-device-macvlan.cfg', 'dst': 'macvlan.netdev'}) 
skipping: [mgmt1] => (item={'src': 'coreos-interface-macvlan.cfg', 'dst': 'output.network'}) 
skipping: [mgmt1] => (item={'src': 'coreos-network-macvlan.cfg', 'dst': 'macvlan.network'}) 

TASK [network_plugin/macvlan : Macvlan | Install cni definition for Macvlan] ***
skipping: [mgmt1]

TASK [network_plugin/macvlan : Macvlan | Install loopback definition for Macvlan] ***
skipping: [mgmt1]

TASK [network_plugin/macvlan : Enable net.ipv4.conf.all.arp_notify in sysctl] ***
skipping: [mgmt1]

TASK [network_plugin/kube-ovn : Kube-OVN | Label ovn-db node] ******************
skipping: [mgmt1] => (item=mgmt1) 

TASK [network_plugin/kube-ovn : Kube-OVN | Create Kube-OVN manifests] **********
skipping: [mgmt1] => (item={'name': 'kube-ovn-crd', 'file': 'cni-kube-ovn-crd.yml'}) 
skipping: [mgmt1] => (item={'name': 'ovn', 'file': 'cni-ovn.yml'}) 
skipping: [mgmt1] => (item={'name': 'kube-ovn', 'file': 'cni-kube-ovn.yml'}) 

TASK [network_plugin/kube-router : kube-router | Add annotations on kube_control_plane] ***

TASK [network_plugin/kube-router : kube-router | Add annotations on kube_node] ***

TASK [network_plugin/kube-router : kube-router | Add common annotations on all servers] ***

TASK [network_plugin/kube-router : kube-router | Create config directory] ******
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Create kubeconfig] ************
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Slurp cni config] *************
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Set cni_config variable] ******
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Set host_subnet variable] *****
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Create cni config] ************
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Delete old configuration] *****
skipping: [mgmt1]

TASK [network_plugin/kube-router : kube-router | Create manifest] **************
skipping: [mgmt1]

TASK [network_plugin/custom_cni : Custom CNI | Check Custom CNI Manifests] *****
skipping: [mgmt1]

TASK [network_plugin/custom_cni : Custom CNI | Copy Custom manifests] **********

TASK [network_plugin/custom_cni : Custom CNI | Start Resources] ****************

TASK [network_plugin/multus : Multus | Copy manifest files] ********************
skipping: [mgmt1] => (item={'name': 'multus-crd', 'file': 'multus-crd.yml', 'type': 'customresourcedefinition'}) 
skipping: [mgmt1] => (item={'name': 'multus-serviceaccount', 'file': 'multus-serviceaccount.yml', 'type': 'serviceaccount'}) 
skipping: [mgmt1] => (item={'name': 'multus-clusterrole', 'file': 'multus-clusterrole.yml', 'type': 'clusterrole'}) 
skipping: [mgmt1] => (item={'name': 'multus-clusterrolebinding', 'file': 'multus-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) 

TASK [network_plugin/multus : Multus | Check container engine type] ************
skipping: [mgmt1]

TASK [network_plugin/multus : Multus | Copy manifest templates] ****************
skipping: [mgmt1] => (item={'name': 'multus-daemonset-containerd', 'file': 'multus-daemonset-containerd.yml', 'type': 'daemonset', 'engine': 'containerd'}) 
skipping: [mgmt1] => (item={'name': 'multus-daemonset-docker', 'file': 'multus-daemonset-docker.yml', 'type': 'daemonset', 'engine': 'docker'}) 
skipping: [mgmt1] => (item={'name': 'multus-daemonset-crio', 'file': 'multus-daemonset-crio.yml', 'type': 'daemonset', 'engine': 'crio'}) 

TASK [kubernetes-apps/helm : Helm | Download helm] *****************************
skipping: [mgmt1]

TASK [kubernetes-apps/helm : Helm | Copy helm binary from download dir] ********
skipping: [mgmt1]

TASK [kubernetes-apps/helm : Helm | Get helm completion] ***********************
skipping: [mgmt1]

TASK [kubernetes-apps/helm : Helm | Install helm completion] *******************
skipping: [mgmt1]

TASK [helm-apps : Validating arguments against arg spec 'main' - Install a list of Helm charts.] ***
skipping: [mgmt1]

TASK [helm-apps : Add Helm repositories] ***************************************
skipping: [mgmt1] => (item={'name': 'kubelet-csr-approver', 'url': 'https://postfinance.github.io/kubelet-csr-approver'}) 

TASK [helm-apps : Update Helm repositories] ************************************
skipping: [mgmt1]

TASK [helm-apps : Install Helm Applications] ***********************************
skipping: [mgmt1] => (item={'name': 'kubelet-csr-approver', 'namespace': 'kube-system', 'chart_ref': 'kubelet-csr-approver/kubelet-csr-approver', 'chart_version': '0.2.8', 'wait': True, 'values': {}}) 

PLAY [calico_rr] ***************************************************************
skipping: no hosts matched

PLAY [kube_control_plane[0]] ***************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]

TASK [win_nodes/kubernetes_patch : Ensure that user manifests directory exists] ***
ok: [mgmt1]

TASK [win_nodes/kubernetes_patch : Check current nodeselector for kube-proxy daemonset] ***
ok: [mgmt1]

TASK [win_nodes/kubernetes_patch : Apply nodeselector patch for kube-proxy daemonset] ***
changed: [mgmt1]

TASK [win_nodes/kubernetes_patch : debug] **************************************
ok: [mgmt1] => 
  msg:
  - daemonset.apps/kube-proxy patched (no change)

TASK [win_nodes/kubernetes_patch : debug] **************************************
ok: [mgmt1] => 
  msg: []

PLAY [kube_control_plane] ******************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [mgmt1]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [mgmt1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [mgmt1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [mgmt1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [mgmt1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [mgmt1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [mgmt1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [mgmt1]

TASK [download : download | Download files / images] ***************************
skipping: [mgmt1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [mgmt1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubeadm-v1.26.5-amd64', 'sha256': '793767419c382bae2dc2c9396baafbf051bfa3214accf40dcd7c5ea405583802', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubelet-v1.26.5-amd64', 'sha256': 'ad5e318ff0e81bc2bef874b2038489722cfcc117bd31726d0193056458c18bff', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.5', 'dest': '/tmp/releases/kubectl-v1.26.5-amd64', 'sha256': '5080bb2e9631fe095139f7e973df9a31eb73e668d1785ffeb524832aed8f87c3', 'url': 'https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crio', 'value': {'file': True, 'enabled': False, 'version': 'v1.26.3', 'dest': '/tmp/releases/cri-o.amd64.v1.26.3tar.gz', 'sha256': '942772081d9cd4bd0c07e466439b76a1ca95d3f10a7b53dc524d2946b2b17a71', 'url': 'https://storage.googleapis.com/cri-o/artifacts/cri-o.amd64.v1.26.3.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': '0.3.0', 'dest': '/tmp/releases/cri-dockerd-0.3.0.amd64.tar.gz', 'sha256': '8e6a445591e77b9570299d0afadeee26cb7aa23e4bfd7518baa6a3260b9ee889', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd-0.3.0.amd64.tgz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=1'], 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.5', 'dest': '/tmp/releases/crun', 'sha256': '84cf20a6060cd53ac21a0590367d1ab65f74baae005c42f2d5bc1af918470455', 'url': 'https://github.com/containers/crun/releases/download/1.4.5/crun-1.4.5-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.1', 'dest': '/tmp/releases/containerd-1.7.1-linux-amd64.tar.gz', 'sha256': '9504771bcb816d3b27fab37a6cf76928ee5e95a31eb41510a7d10ae726e01e85', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.1/containerd-1.7.1-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'skopeo', 'value': {'file': True, 'enabled': False, 'version': 'v1.10.0', 'dest': '/tmp/releases/skopeo', 'sha256': '20fbd1bac1d33768c3671e4fe9d90c5233d7e13a40e4935b4b24ebc083390604', 'url': 'https://github.com/lework/skopeo-binary/releases/download/v1.10.0/skopeo-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_relay', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-relay', 'tag': 'v1.13.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_certgen', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/certgen', 'tag': 'v0.1.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_ui_backend', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/hubble-ui-backend', 'tag': 'v0.11.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'cilium_hubble_envoy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/envoyproxy/envoy', 'tag': 'v1.22.5', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'ciliumcli', 'value': {'enabled': False, 'file': True, 'version': 'v0.13.1', 'dest': '/tmp/releases/cilium', 'sha256': 'dfabb7a080cd2ae40c71e51980183949bd5ce76184ac439ef32f988825cb275d', 'url': 'https://github.com/cilium/cilium-cli/releases/download/v0.13.1/cilium-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannel/flannel', 'tag': 'v0.21.4', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.2.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.10.7', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.5.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.5.12', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.6.6-alpine', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.18', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [mgmt1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.0', 'dest': '/tmp/releases/helm-v3.12.0/helm-v3.12.0-linux-amd64.tar.gz', 'sha256': 'da36e117d6dbc57c8ec5bab2283222fbd108db86c83389eebe045ad1ef3e2c3b', 'url': 'https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.3', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.3/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.8.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/metrics-server/metrics-server', 'tag': 'v0.6.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/local-volume-provisioner', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.23', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.11.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'registry.k8s.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/dashboard', 'tag': 'v2.0.3', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.13.9', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'yq', 'value': {'enabled': False, 'file': True, 'version': 'v4.33.3', 'dest': '/tmp/releases/yq', 'sha256': '4ee662847c588c3ef2fec8bfb304e8739e3dbaba87ccb9a608d691c88f5b64dc', 'url': 'https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 
skipping: [mgmt1] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.5', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [mgmt1] => 
  msg: Check roles/kubespray-defaults/defaults/main.yml

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [mgmt1] => (item=mgmt1) 
skipping: [mgmt1] => (item=dgx1) 
skipping: [mgmt1] => (item=dgx2) 
skipping: [mgmt1] => (item=dgx3) 
skipping: [mgmt1] => (item=dgx4) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [mgmt1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [mgmt1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [mgmt1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [mgmt1]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/openstack : include_tasks] *****
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Get base64 cacert] ***
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Get base64 cloud-config] ***
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Generate Manifests] ***
skipping: [mgmt1] => (item={'name': 'external-openstack-cloud-config-secret', 'file': 'external-openstack-cloud-config-secret.yml'}) 
skipping: [mgmt1] => (item={'name': 'external-openstack-cloud-controller-manager-roles', 'file': 'external-openstack-cloud-controller-manager-roles.yml'}) 
skipping: [mgmt1] => (item={'name': 'external-openstack-cloud-controller-manager-role-bindings', 'file': 'external-openstack-cloud-controller-manager-role-bindings.yml'}) 
skipping: [mgmt1] => (item={'name': 'external-openstack-cloud-controller-manager-ds', 'file': 'external-openstack-cloud-controller-manager-ds.yml'}) 

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Apply Manifests] ***
skipping: [mgmt1] => (item=external-openstack-cloud-config-secret.yml) 
skipping: [mgmt1] => (item=external-openstack-cloud-controller-manager-roles.yml) 
skipping: [mgmt1] => (item=external-openstack-cloud-controller-manager-role-bindings.yml) 
skipping: [mgmt1] => (item=external-openstack-cloud-controller-manager-ds.yml) 

TASK [kubernetes-apps/external_cloud_controller/vsphere : include_tasks] *******
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Controller | Generate CPI cloud-config] ***
skipping: [mgmt1] => (item=external-vsphere-cpi-cloud-config) 

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Controller | Generate Manifests] ***
skipping: [mgmt1] => (item=external-vsphere-cpi-cloud-config-secret.yml) 
skipping: [mgmt1] => (item=external-vsphere-cloud-controller-manager-roles.yml) 
skipping: [mgmt1] => (item=external-vsphere-cloud-controller-manager-role-bindings.yml) 
skipping: [mgmt1] => (item=external-vsphere-cloud-controller-manager-ds.yml) 

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Provider Interface | Create a CPI configMap manifest] ***
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Provider Interface | Apply a CPI configMap manifest] ***
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Controller | Apply Manifests] ***
skipping: [mgmt1] => (item=external-vsphere-cpi-cloud-config-secret.yml) 
skipping: [mgmt1] => (item=external-vsphere-cloud-controller-manager-roles.yml) 
skipping: [mgmt1] => (item=external-vsphere-cloud-controller-manager-role-bindings.yml) 
skipping: [mgmt1] => (item=external-vsphere-cloud-controller-manager-ds.yml) 

TASK [kubernetes-apps/external_cloud_controller/hcloud : External Hcloud Cloud Controller | Generate Manifests] ***
skipping: [mgmt1]

TASK [kubernetes-apps/external_cloud_controller/hcloud : External Hcloud Cloud Controller | Apply Manifests] ***
skipping: [mgmt1]

TASK [kubernetes-apps/network_plugin/flannel : Flannel | Start Resources] ******
skipping: [mgmt1] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'flannel', 'file': 'cni-flannel-rbac.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'}) 
skipping: [mgmt1] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'kube-flannel', 'file': 'cni-flannel.yml', 'type': 'ds'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/network_plugin/flannel : Flannel | Wait for flannel subnet.env file presence] ***
skipping: [mgmt1]

TASK [kubernetes-apps/network_plugin/kube-ovn : Kube-OVN | Start Resources] ****
skipping: [mgmt1] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'kube-ovn-crd', 'file': 'cni-kube-ovn-crd.yml'}, 'ansible_loop_var': 'item'}) 
skipping: [mgmt1] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'ovn', 'file': 'cni-ovn.yml'}, 'ansible_loop_var': 'item'}) 
skipping: [mgmt1] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'kube-ovn', 'file': 'cni-kube-ovn.yml'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/network_plugin/weave : Weave | Start Resources] **********
skipping: [mgmt1]

TASK [kubernetes-apps/network_plugin/weave : Weave | Wait for Weave to become available] ***
skipping: [mgmt1]

TASK [kubernetes-apps/network_plugin/kube-router : kube-router | Start Resources] ***
skipping: [mgmt1]

TASK [kubernetes-apps/network_plugin/kube-router : kube-router | Wait for kube-router pods to be ready] ***
skipping: [mgmt1]

TASK [kubernetes-apps/network_plugin/multus : Multus | Start resources] ********
failed: [mgmt1 -> {{ groups['kube_control_plane'][0] }}] (item=None) => changed=false 
  ansible_loop_var: item
  item: null
  msg: 'Failed to template loop_control.label: ''None'' has no attribute ''item'''
  skip_reason: Conditional result was False

NO MORE HOSTS LEFT *************************************************************

PLAY RECAP *********************************************************************
dgx1                       : ok=462  changed=12   unreachable=0    failed=1    skipped=560  rescued=1    ignored=1   
dgx2                       : ok=462  changed=12   unreachable=0    failed=1    skipped=559  rescued=1    ignored=1   
dgx3                       : ok=462  changed=12   unreachable=0    failed=1    skipped=559  rescued=1    ignored=1   
dgx4                       : ok=462  changed=12   unreachable=0    failed=1    skipped=559  rescued=1    ignored=1   
mgmt1                      : ok=710  changed=25   unreachable=0    failed=1    skipped=1053 rescued=0    ignored=1   

